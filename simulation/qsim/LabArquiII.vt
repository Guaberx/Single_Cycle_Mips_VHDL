// Copyright (C) 1991-2013 Altera Corporation
// Your use of Altera Corporation's design tools, logic functions 
// and other software and tools, and its AMPP partner logic 
// functions, and any output files from any of the foregoing 
// (including device programming or simulation files), and any 
// associated documentation or information are expressly subject 
// to the terms and conditions of the Altera Program License 
// Subscription Agreement, Altera MegaCore Function License 
// Agreement, or other applicable license agreement, including, 
// without limitation, that your use is for the sole purpose of 
// programming logic devices manufactured by Altera and sold by 
// Altera or its authorized distributors.  Please refer to the 
// applicable agreement for further details.

// *****************************************************************************
// This file contains a Verilog test bench with test vectors .The test vectors  
// are exported from a vector file in the Quartus Waveform Editor and apply to  
// the top level entity of the current Quartus project .The user can use this   
// testbench to simulate his design using a third-party simulation tool .       
// *****************************************************************************
// Generated on "04/27/2018 17:32:16"
                                                                        
// Verilog Self-Checking Test Bench (with test vectors) for design :    monociclo
// 
// Simulation tool : 3rd Party
// 

`timescale 1 ps/ 1 ps
module monociclo_vlg_sample_tst(
	clk,
	sampler_tx
);
input  clk;
output sampler_tx;

reg sample;
time current_time;
always @(clk)
                                                                                
begin                                                 
 if ($realtime > 0)                                   
 begin                                                
	if ($realtime == 0 || $realtime != current_time)  
	begin									          
		if (sample === 1'bx)                          
			sample = 0;                               
		else                                          
			sample = ~sample;                         
	end										          
	current_time = $realtime;					      
 end                                                  
end                                                   

assign sampler_tx = sample;
endmodule

module monociclo_vlg_check_tst (
	SalidaALU,
	SalidaPC,
	SalidaRAM,
	SalidaRF1,
	SalidaRF2,
	SalidaROM,
	sampler_rx
);
input [31:0] SalidaALU;
input [7:0] SalidaPC;
input [31:0] SalidaRAM;
input [31:0] SalidaRF1;
input [31:0] SalidaRF2;
input [31:0] SalidaROM;
input sampler_rx;

reg [31:0] SalidaALU_expected;
reg [7:0] SalidaPC_expected;
reg [31:0] SalidaRAM_expected;
reg [31:0] SalidaRF1_expected;
reg [31:0] SalidaRF2_expected;
reg [31:0] SalidaROM_expected;

reg [31:0] SalidaALU_prev;
reg [7:0] SalidaPC_prev;
reg [31:0] SalidaRAM_prev;
reg [31:0] SalidaRF1_prev;
reg [31:0] SalidaRF2_prev;
reg [31:0] SalidaROM_prev;

reg [31:0] SalidaALU_expected_prev;
reg [7:0] SalidaPC_expected_prev;
reg [31:0] SalidaRAM_expected_prev;
reg [31:0] SalidaRF1_expected_prev;
reg [31:0] SalidaRF2_expected_prev;
reg [31:0] SalidaROM_expected_prev;

reg [31:0] last_SalidaALU_exp;
reg [7:0] last_SalidaPC_exp;
reg [31:0] last_SalidaRAM_exp;
reg [31:0] last_SalidaRF1_exp;
reg [31:0] last_SalidaRF2_exp;
reg [31:0] last_SalidaROM_exp;

reg trigger;

integer i;
integer nummismatches;

reg [1:6] on_first_change ;


initial
begin
trigger = 0;
i = 0;
nummismatches = 0;
on_first_change = 6'b1;
end

// update real /o prevs

always @(trigger)
begin
	SalidaALU_prev = SalidaALU;
	SalidaPC_prev = SalidaPC;
	SalidaRAM_prev = SalidaRAM;
	SalidaRF1_prev = SalidaRF1;
	SalidaRF2_prev = SalidaRF2;
	SalidaROM_prev = SalidaROM;
end

// update expected /o prevs

always @(trigger)
begin
	SalidaALU_expected_prev = SalidaALU_expected;
	SalidaPC_expected_prev = SalidaPC_expected;
	SalidaRAM_expected_prev = SalidaRAM_expected;
	SalidaRF1_expected_prev = SalidaRF1_expected;
	SalidaRF2_expected_prev = SalidaRF2_expected;
	SalidaROM_expected_prev = SalidaROM_expected;
end


// expected SalidaALU[ 31 ]
initial
begin
	SalidaALU_expected[31] = 1'b0;
end 
// expected SalidaALU[ 30 ]
initial
begin
	SalidaALU_expected[30] = 1'b0;
end 
// expected SalidaALU[ 29 ]
initial
begin
	SalidaALU_expected[29] = 1'b0;
end 
// expected SalidaALU[ 28 ]
initial
begin
	SalidaALU_expected[28] = 1'b0;
end 
// expected SalidaALU[ 27 ]
initial
begin
	SalidaALU_expected[27] = 1'b0;
end 
// expected SalidaALU[ 26 ]
initial
begin
	SalidaALU_expected[26] = 1'b0;
end 
// expected SalidaALU[ 25 ]
initial
begin
	SalidaALU_expected[25] = 1'b0;
end 
// expected SalidaALU[ 24 ]
initial
begin
	SalidaALU_expected[24] = 1'b0;
end 
// expected SalidaALU[ 23 ]
initial
begin
	SalidaALU_expected[23] = 1'b0;
end 
// expected SalidaALU[ 22 ]
initial
begin
	SalidaALU_expected[22] = 1'b0;
end 
// expected SalidaALU[ 21 ]
initial
begin
	SalidaALU_expected[21] = 1'b0;
end 
// expected SalidaALU[ 20 ]
initial
begin
	SalidaALU_expected[20] = 1'b0;
end 
// expected SalidaALU[ 19 ]
initial
begin
	SalidaALU_expected[19] = 1'b0;
end 
// expected SalidaALU[ 18 ]
initial
begin
	SalidaALU_expected[18] = 1'b0;
end 
// expected SalidaALU[ 17 ]
initial
begin
	SalidaALU_expected[17] = 1'b0;
end 
// expected SalidaALU[ 16 ]
initial
begin
	SalidaALU_expected[16] = 1'b0;
end 
// expected SalidaALU[ 15 ]
initial
begin
	SalidaALU_expected[15] = 1'b0;
end 
// expected SalidaALU[ 14 ]
initial
begin
	SalidaALU_expected[14] = 1'b0;
end 
// expected SalidaALU[ 13 ]
initial
begin
	SalidaALU_expected[13] = 1'b0;
end 
// expected SalidaALU[ 12 ]
initial
begin
	SalidaALU_expected[12] = 1'b0;
end 
// expected SalidaALU[ 11 ]
initial
begin
	SalidaALU_expected[11] = 1'b0;
end 
// expected SalidaALU[ 10 ]
initial
begin
	SalidaALU_expected[10] = 1'b0;
end 
// expected SalidaALU[ 9 ]
initial
begin
	SalidaALU_expected[9] = 1'b0;
end 
// expected SalidaALU[ 8 ]
initial
begin
	SalidaALU_expected[8] = 1'b0;
end 
// expected SalidaALU[ 7 ]
initial
begin
	SalidaALU_expected[7] = 1'b0;
end 
// expected SalidaALU[ 6 ]
initial
begin
	SalidaALU_expected[6] = 1'b0;
end 
// expected SalidaALU[ 5 ]
initial
begin
	SalidaALU_expected[5] = 1'b0;
end 
// expected SalidaALU[ 4 ]
initial
begin
	SalidaALU_expected[4] = 1'b0;
end 
// expected SalidaALU[ 3 ]
initial
begin
	SalidaALU_expected[3] = 1'b0;
end 
// expected SalidaALU[ 2 ]
initial
begin
	SalidaALU_expected[2] = 1'b0;
end 
// expected SalidaALU[ 1 ]
initial
begin
	SalidaALU_expected[1] = 1'b0;
end 
// expected SalidaALU[ 0 ]
initial
begin
	SalidaALU_expected[0] = 1'b0;
end 
// expected SalidaPC[ 7 ]
initial
begin
	SalidaPC_expected[7] = 1'b0;
end 
// expected SalidaPC[ 6 ]
initial
begin
	SalidaPC_expected[6] = 1'b0;
end 
// expected SalidaPC[ 5 ]
initial
begin
	SalidaPC_expected[5] = 1'b0;
end 
// expected SalidaPC[ 4 ]
initial
begin
	SalidaPC_expected[4] = 1'b0;
end 
// expected SalidaPC[ 3 ]
initial
begin
	SalidaPC_expected[3] = 1'b0;
end 
// expected SalidaPC[ 2 ]
initial
begin
	SalidaPC_expected[2] = 1'b0;
end 
// expected SalidaPC[ 1 ]
initial
begin
	SalidaPC_expected[1] = 1'b0;
end 
// expected SalidaPC[ 0 ]
initial
begin
	SalidaPC_expected[0] = 1'b0;
end 
// expected SalidaRAM[ 31 ]
initial
begin
	SalidaRAM_expected[31] = 1'b0;
end 
// expected SalidaRAM[ 30 ]
initial
begin
	SalidaRAM_expected[30] = 1'b0;
end 
// expected SalidaRAM[ 29 ]
initial
begin
	SalidaRAM_expected[29] = 1'b0;
end 
// expected SalidaRAM[ 28 ]
initial
begin
	SalidaRAM_expected[28] = 1'b0;
end 
// expected SalidaRAM[ 27 ]
initial
begin
	SalidaRAM_expected[27] = 1'b0;
end 
// expected SalidaRAM[ 26 ]
initial
begin
	SalidaRAM_expected[26] = 1'b0;
end 
// expected SalidaRAM[ 25 ]
initial
begin
	SalidaRAM_expected[25] = 1'b0;
end 
// expected SalidaRAM[ 24 ]
initial
begin
	SalidaRAM_expected[24] = 1'b0;
end 
// expected SalidaRAM[ 23 ]
initial
begin
	SalidaRAM_expected[23] = 1'b0;
end 
// expected SalidaRAM[ 22 ]
initial
begin
	SalidaRAM_expected[22] = 1'b0;
end 
// expected SalidaRAM[ 21 ]
initial
begin
	SalidaRAM_expected[21] = 1'b0;
end 
// expected SalidaRAM[ 20 ]
initial
begin
	SalidaRAM_expected[20] = 1'b0;
end 
// expected SalidaRAM[ 19 ]
initial
begin
	SalidaRAM_expected[19] = 1'b0;
end 
// expected SalidaRAM[ 18 ]
initial
begin
	SalidaRAM_expected[18] = 1'b0;
end 
// expected SalidaRAM[ 17 ]
initial
begin
	SalidaRAM_expected[17] = 1'b0;
end 
// expected SalidaRAM[ 16 ]
initial
begin
	SalidaRAM_expected[16] = 1'b0;
end 
// expected SalidaRAM[ 15 ]
initial
begin
	SalidaRAM_expected[15] = 1'b0;
end 
// expected SalidaRAM[ 14 ]
initial
begin
	SalidaRAM_expected[14] = 1'b0;
end 
// expected SalidaRAM[ 13 ]
initial
begin
	SalidaRAM_expected[13] = 1'b0;
end 
// expected SalidaRAM[ 12 ]
initial
begin
	SalidaRAM_expected[12] = 1'b0;
end 
// expected SalidaRAM[ 11 ]
initial
begin
	SalidaRAM_expected[11] = 1'b0;
end 
// expected SalidaRAM[ 10 ]
initial
begin
	SalidaRAM_expected[10] = 1'b0;
end 
// expected SalidaRAM[ 9 ]
initial
begin
	SalidaRAM_expected[9] = 1'b0;
end 
// expected SalidaRAM[ 8 ]
initial
begin
	SalidaRAM_expected[8] = 1'b0;
end 
// expected SalidaRAM[ 7 ]
initial
begin
	SalidaRAM_expected[7] = 1'b0;
end 
// expected SalidaRAM[ 6 ]
initial
begin
	SalidaRAM_expected[6] = 1'b0;
end 
// expected SalidaRAM[ 5 ]
initial
begin
	SalidaRAM_expected[5] = 1'b0;
end 
// expected SalidaRAM[ 4 ]
initial
begin
	SalidaRAM_expected[4] = 1'b0;
end 
// expected SalidaRAM[ 3 ]
initial
begin
	SalidaRAM_expected[3] = 1'b0;
end 
// expected SalidaRAM[ 2 ]
initial
begin
	SalidaRAM_expected[2] = 1'b0;
end 
// expected SalidaRAM[ 1 ]
initial
begin
	SalidaRAM_expected[1] = 1'b0;
end 
// expected SalidaRAM[ 0 ]
initial
begin
	SalidaRAM_expected[0] = 1'b0;
end 
// expected SalidaRF1[ 31 ]
initial
begin
	SalidaRF1_expected[31] = 1'b0;
end 
// expected SalidaRF1[ 30 ]
initial
begin
	SalidaRF1_expected[30] = 1'b0;
end 
// expected SalidaRF1[ 29 ]
initial
begin
	SalidaRF1_expected[29] = 1'b0;
end 
// expected SalidaRF1[ 28 ]
initial
begin
	SalidaRF1_expected[28] = 1'b0;
end 
// expected SalidaRF1[ 27 ]
initial
begin
	SalidaRF1_expected[27] = 1'b0;
end 
// expected SalidaRF1[ 26 ]
initial
begin
	SalidaRF1_expected[26] = 1'b0;
end 
// expected SalidaRF1[ 25 ]
initial
begin
	SalidaRF1_expected[25] = 1'b0;
end 
// expected SalidaRF1[ 24 ]
initial
begin
	SalidaRF1_expected[24] = 1'b0;
end 
// expected SalidaRF1[ 23 ]
initial
begin
	SalidaRF1_expected[23] = 1'b0;
end 
// expected SalidaRF1[ 22 ]
initial
begin
	SalidaRF1_expected[22] = 1'b0;
end 
// expected SalidaRF1[ 21 ]
initial
begin
	SalidaRF1_expected[21] = 1'b0;
end 
// expected SalidaRF1[ 20 ]
initial
begin
	SalidaRF1_expected[20] = 1'b0;
end 
// expected SalidaRF1[ 19 ]
initial
begin
	SalidaRF1_expected[19] = 1'b0;
end 
// expected SalidaRF1[ 18 ]
initial
begin
	SalidaRF1_expected[18] = 1'b0;
end 
// expected SalidaRF1[ 17 ]
initial
begin
	SalidaRF1_expected[17] = 1'b0;
end 
// expected SalidaRF1[ 16 ]
initial
begin
	SalidaRF1_expected[16] = 1'b0;
end 
// expected SalidaRF1[ 15 ]
initial
begin
	SalidaRF1_expected[15] = 1'b0;
end 
// expected SalidaRF1[ 14 ]
initial
begin
	SalidaRF1_expected[14] = 1'b0;
end 
// expected SalidaRF1[ 13 ]
initial
begin
	SalidaRF1_expected[13] = 1'b0;
end 
// expected SalidaRF1[ 12 ]
initial
begin
	SalidaRF1_expected[12] = 1'b0;
end 
// expected SalidaRF1[ 11 ]
initial
begin
	SalidaRF1_expected[11] = 1'b0;
end 
// expected SalidaRF1[ 10 ]
initial
begin
	SalidaRF1_expected[10] = 1'b0;
end 
// expected SalidaRF1[ 9 ]
initial
begin
	SalidaRF1_expected[9] = 1'b0;
end 
// expected SalidaRF1[ 8 ]
initial
begin
	SalidaRF1_expected[8] = 1'b0;
end 
// expected SalidaRF1[ 7 ]
initial
begin
	SalidaRF1_expected[7] = 1'b0;
end 
// expected SalidaRF1[ 6 ]
initial
begin
	SalidaRF1_expected[6] = 1'b0;
end 
// expected SalidaRF1[ 5 ]
initial
begin
	SalidaRF1_expected[5] = 1'b0;
end 
// expected SalidaRF1[ 4 ]
initial
begin
	SalidaRF1_expected[4] = 1'b0;
end 
// expected SalidaRF1[ 3 ]
initial
begin
	SalidaRF1_expected[3] = 1'b0;
end 
// expected SalidaRF1[ 2 ]
initial
begin
	SalidaRF1_expected[2] = 1'b0;
end 
// expected SalidaRF1[ 1 ]
initial
begin
	SalidaRF1_expected[1] = 1'b0;
end 
// expected SalidaRF1[ 0 ]
initial
begin
	SalidaRF1_expected[0] = 1'b0;
end 
// expected SalidaRF2[ 31 ]
initial
begin
	SalidaRF2_expected[31] = 1'b0;
end 
// expected SalidaRF2[ 30 ]
initial
begin
	SalidaRF2_expected[30] = 1'b0;
end 
// expected SalidaRF2[ 29 ]
initial
begin
	SalidaRF2_expected[29] = 1'b0;
end 
// expected SalidaRF2[ 28 ]
initial
begin
	SalidaRF2_expected[28] = 1'b0;
end 
// expected SalidaRF2[ 27 ]
initial
begin
	SalidaRF2_expected[27] = 1'b0;
end 
// expected SalidaRF2[ 26 ]
initial
begin
	SalidaRF2_expected[26] = 1'b0;
end 
// expected SalidaRF2[ 25 ]
initial
begin
	SalidaRF2_expected[25] = 1'b0;
end 
// expected SalidaRF2[ 24 ]
initial
begin
	SalidaRF2_expected[24] = 1'b0;
end 
// expected SalidaRF2[ 23 ]
initial
begin
	SalidaRF2_expected[23] = 1'b0;
end 
// expected SalidaRF2[ 22 ]
initial
begin
	SalidaRF2_expected[22] = 1'b0;
end 
// expected SalidaRF2[ 21 ]
initial
begin
	SalidaRF2_expected[21] = 1'b0;
end 
// expected SalidaRF2[ 20 ]
initial
begin
	SalidaRF2_expected[20] = 1'b0;
end 
// expected SalidaRF2[ 19 ]
initial
begin
	SalidaRF2_expected[19] = 1'b0;
end 
// expected SalidaRF2[ 18 ]
initial
begin
	SalidaRF2_expected[18] = 1'b0;
end 
// expected SalidaRF2[ 17 ]
initial
begin
	SalidaRF2_expected[17] = 1'b0;
end 
// expected SalidaRF2[ 16 ]
initial
begin
	SalidaRF2_expected[16] = 1'b0;
end 
// expected SalidaRF2[ 15 ]
initial
begin
	SalidaRF2_expected[15] = 1'b0;
end 
// expected SalidaRF2[ 14 ]
initial
begin
	SalidaRF2_expected[14] = 1'b0;
end 
// expected SalidaRF2[ 13 ]
initial
begin
	SalidaRF2_expected[13] = 1'b0;
end 
// expected SalidaRF2[ 12 ]
initial
begin
	SalidaRF2_expected[12] = 1'b0;
end 
// expected SalidaRF2[ 11 ]
initial
begin
	SalidaRF2_expected[11] = 1'b0;
end 
// expected SalidaRF2[ 10 ]
initial
begin
	SalidaRF2_expected[10] = 1'b0;
end 
// expected SalidaRF2[ 9 ]
initial
begin
	SalidaRF2_expected[9] = 1'b0;
end 
// expected SalidaRF2[ 8 ]
initial
begin
	SalidaRF2_expected[8] = 1'b0;
end 
// expected SalidaRF2[ 7 ]
initial
begin
	SalidaRF2_expected[7] = 1'b0;
end 
// expected SalidaRF2[ 6 ]
initial
begin
	SalidaRF2_expected[6] = 1'b0;
end 
// expected SalidaRF2[ 5 ]
initial
begin
	SalidaRF2_expected[5] = 1'b0;
end 
// expected SalidaRF2[ 4 ]
initial
begin
	SalidaRF2_expected[4] = 1'b0;
end 
// expected SalidaRF2[ 3 ]
initial
begin
	SalidaRF2_expected[3] = 1'b0;
end 
// expected SalidaRF2[ 2 ]
initial
begin
	SalidaRF2_expected[2] = 1'b0;
end 
// expected SalidaRF2[ 1 ]
initial
begin
	SalidaRF2_expected[1] = 1'b0;
end 
// expected SalidaRF2[ 0 ]
initial
begin
	SalidaRF2_expected[0] = 1'b0;
end 
// expected SalidaROM[ 31 ]
initial
begin
	SalidaROM_expected[31] = 1'b0;
end 
// expected SalidaROM[ 30 ]
initial
begin
	SalidaROM_expected[30] = 1'b0;
end 
// expected SalidaROM[ 29 ]
initial
begin
	SalidaROM_expected[29] = 1'b0;
end 
// expected SalidaROM[ 28 ]
initial
begin
	SalidaROM_expected[28] = 1'b0;
end 
// expected SalidaROM[ 27 ]
initial
begin
	SalidaROM_expected[27] = 1'b0;
end 
// expected SalidaROM[ 26 ]
initial
begin
	SalidaROM_expected[26] = 1'b0;
end 
// expected SalidaROM[ 25 ]
initial
begin
	SalidaROM_expected[25] = 1'b0;
end 
// expected SalidaROM[ 24 ]
initial
begin
	SalidaROM_expected[24] = 1'b0;
end 
// expected SalidaROM[ 23 ]
initial
begin
	SalidaROM_expected[23] = 1'b0;
end 
// expected SalidaROM[ 22 ]
initial
begin
	SalidaROM_expected[22] = 1'b0;
end 
// expected SalidaROM[ 21 ]
initial
begin
	SalidaROM_expected[21] = 1'b0;
end 
// expected SalidaROM[ 20 ]
initial
begin
	SalidaROM_expected[20] = 1'b0;
end 
// expected SalidaROM[ 19 ]
initial
begin
	SalidaROM_expected[19] = 1'b0;
end 
// expected SalidaROM[ 18 ]
initial
begin
	SalidaROM_expected[18] = 1'b0;
end 
// expected SalidaROM[ 17 ]
initial
begin
	SalidaROM_expected[17] = 1'b0;
end 
// expected SalidaROM[ 16 ]
initial
begin
	SalidaROM_expected[16] = 1'b0;
end 
// expected SalidaROM[ 15 ]
initial
begin
	SalidaROM_expected[15] = 1'b0;
end 
// expected SalidaROM[ 14 ]
initial
begin
	SalidaROM_expected[14] = 1'b0;
end 
// expected SalidaROM[ 13 ]
initial
begin
	SalidaROM_expected[13] = 1'b0;
end 
// expected SalidaROM[ 12 ]
initial
begin
	SalidaROM_expected[12] = 1'b0;
end 
// expected SalidaROM[ 11 ]
initial
begin
	SalidaROM_expected[11] = 1'b0;
end 
// expected SalidaROM[ 10 ]
initial
begin
	SalidaROM_expected[10] = 1'b0;
end 
// expected SalidaROM[ 9 ]
initial
begin
	SalidaROM_expected[9] = 1'b0;
end 
// expected SalidaROM[ 8 ]
initial
begin
	SalidaROM_expected[8] = 1'b0;
end 
// expected SalidaROM[ 7 ]
initial
begin
	SalidaROM_expected[7] = 1'b0;
end 
// expected SalidaROM[ 6 ]
initial
begin
	SalidaROM_expected[6] = 1'b0;
end 
// expected SalidaROM[ 5 ]
initial
begin
	SalidaROM_expected[5] = 1'b0;
end 
// expected SalidaROM[ 4 ]
initial
begin
	SalidaROM_expected[4] = 1'b0;
end 
// expected SalidaROM[ 3 ]
initial
begin
	SalidaROM_expected[3] = 1'b0;
end 
// expected SalidaROM[ 2 ]
initial
begin
	SalidaROM_expected[2] = 1'b0;
end 
// expected SalidaROM[ 1 ]
initial
begin
	SalidaROM_expected[1] = 1'b0;
end 
// expected SalidaROM[ 0 ]
initial
begin
	SalidaROM_expected[0] = 1'b0;
end 
// generate trigger
always @(SalidaALU_expected or SalidaALU or SalidaPC_expected or SalidaPC or SalidaRAM_expected or SalidaRAM or SalidaRF1_expected or SalidaRF1 or SalidaRF2_expected or SalidaRF2 or SalidaROM_expected or SalidaROM)
begin
	trigger <= ~trigger;
end

always @(posedge sampler_rx or negedge sampler_rx)
begin
`ifdef debug_tbench
	$display("Scanning pattern %d @time = %t",i,$realtime );
	i = i + 1;
	$display("| expected SalidaALU = %b | expected SalidaPC = %b | expected SalidaRAM = %b | expected SalidaRF1 = %b | expected SalidaRF2 = %b | expected SalidaROM = %b | ",SalidaALU_expected_prev,SalidaPC_expected_prev,SalidaRAM_expected_prev,SalidaRF1_expected_prev,SalidaRF2_expected_prev,SalidaROM_expected_prev);
	$display("| real SalidaALU = %b | real SalidaPC = %b | real SalidaRAM = %b | real SalidaRF1 = %b | real SalidaRF2 = %b | real SalidaROM = %b | ",SalidaALU_prev,SalidaPC_prev,SalidaRAM_prev,SalidaRF1_prev,SalidaRF2_prev,SalidaROM_prev);
`endif
	if (
		( SalidaALU_expected_prev[0] !== 1'bx ) && ( SalidaALU_prev[0] !== SalidaALU_expected_prev[0] )
		&& ((SalidaALU_expected_prev[0] !== last_SalidaALU_exp[0]) ||
			on_first_change[1])
	)
	begin
		$display ("ERROR! Vector Mismatch for output port SalidaALU[0] :: @time = %t",  $realtime);
		$display ("     Expected value = %b", SalidaALU_expected_prev);
		$display ("     Real value = %b", SalidaALU_prev);
		nummismatches = nummismatches + 1;
		on_first_change[1] = 1'b0;
		last_SalidaALU_exp[0] = SalidaALU_expected_prev[0];
	end
	if (
		( SalidaALU_expected_prev[1] !== 1'bx ) && ( SalidaALU_prev[1] !== SalidaALU_expected_prev[1] )
		&& ((SalidaALU_expected_prev[1] !== last_SalidaALU_exp[1]) ||
			on_first_change[1])
	)
	begin
		$display ("ERROR! Vector Mismatch for output port SalidaALU[1] :: @time = %t",  $realtime);
		$display ("     Expected value = %b", SalidaALU_expected_prev);
		$display ("     Real value = %b", SalidaALU_prev);
		nummismatches = nummismatches + 1;
		on_first_change[1] = 1'b0;
		last_SalidaALU_exp[1] = SalidaALU_expected_prev[1];
	end
	if (
		( SalidaALU_expected_prev[2] !== 1'bx ) && ( SalidaALU_prev[2] !== SalidaALU_expected_prev[2] )
		&& ((SalidaALU_expected_prev[2] !== last_SalidaALU_exp[2]) ||
			on_first_change[1])
	)
	begin
		$display ("ERROR! Vector Mismatch for output port SalidaALU[2] :: @time = %t",  $realtime);
		$display ("     Expected value = %b", SalidaALU_expected_prev);
		$display ("     Real value = %b", SalidaALU_prev);
		nummismatches = nummismatches + 1;
		on_first_change[1] = 1'b0;
		last_SalidaALU_exp[2] = SalidaALU_expected_prev[2];
	end
	if (
		( SalidaALU_expected_prev[3] !== 1'bx ) && ( SalidaALU_prev[3] !== SalidaALU_expected_prev[3] )
		&& ((SalidaALU_expected_prev[3] !== last_SalidaALU_exp[3]) ||
			on_first_change[1])
	)
	begin
		$display ("ERROR! Vector Mismatch for output port SalidaALU[3] :: @time = %t",  $realtime);
		$display ("     Expected value = %b", SalidaALU_expected_prev);
		$display ("     Real value = %b", SalidaALU_prev);
		nummismatches = nummismatches + 1;
		on_first_change[1] = 1'b0;
		last_SalidaALU_exp[3] = SalidaALU_expected_prev[3];
	end
	if (
		( SalidaALU_expected_prev[4] !== 1'bx ) && ( SalidaALU_prev[4] !== SalidaALU_expected_prev[4] )
		&& ((SalidaALU_expected_prev[4] !== last_SalidaALU_exp[4]) ||
			on_first_change[1])
	)
	begin
		$display ("ERROR! Vector Mismatch for output port SalidaALU[4] :: @time = %t",  $realtime);
		$display ("     Expected value = %b", SalidaALU_expected_prev);
		$display ("     Real value = %b", SalidaALU_prev);
		nummismatches = nummismatches + 1;
		on_first_change[1] = 1'b0;
		last_SalidaALU_exp[4] = SalidaALU_expected_prev[4];
	end
	if (
		( SalidaALU_expected_prev[5] !== 1'bx ) && ( SalidaALU_prev[5] !== SalidaALU_expected_prev[5] )
		&& ((SalidaALU_expected_prev[5] !== last_SalidaALU_exp[5]) ||
			on_first_change[1])
	)
	begin
		$display ("ERROR! Vector Mismatch for output port SalidaALU[5] :: @time = %t",  $realtime);
		$display ("     Expected value = %b", SalidaALU_expected_prev);
		$display ("     Real value = %b", SalidaALU_prev);
		nummismatches = nummismatches + 1;
		on_first_change[1] = 1'b0;
		last_SalidaALU_exp[5] = SalidaALU_expected_prev[5];
	end
	if (
		( SalidaALU_expected_prev[6] !== 1'bx ) && ( SalidaALU_prev[6] !== SalidaALU_expected_prev[6] )
		&& ((SalidaALU_expected_prev[6] !== last_SalidaALU_exp[6]) ||
			on_first_change[1])
	)
	begin
		$display ("ERROR! Vector Mismatch for output port SalidaALU[6] :: @time = %t",  $realtime);
		$display ("     Expected value = %b", SalidaALU_expected_prev);
		$display ("     Real value = %b", SalidaALU_prev);
		nummismatches = nummismatches + 1;
		on_first_change[1] = 1'b0;
		last_SalidaALU_exp[6] = SalidaALU_expected_prev[6];
	end
	if (
		( SalidaALU_expected_prev[7] !== 1'bx ) && ( SalidaALU_prev[7] !== SalidaALU_expected_prev[7] )
		&& ((SalidaALU_expected_prev[7] !== last_SalidaALU_exp[7]) ||
			on_first_change[1])
	)
	begin
		$display ("ERROR! Vector Mismatch for output port SalidaALU[7] :: @time = %t",  $realtime);
		$display ("     Expected value = %b", SalidaALU_expected_prev);
		$display ("     Real value = %b", SalidaALU_prev);
		nummismatches = nummismatches + 1;
		on_first_change[1] = 1'b0;
		last_SalidaALU_exp[7] = SalidaALU_expected_prev[7];
	end
	if (
		( SalidaALU_expected_prev[8] !== 1'bx ) && ( SalidaALU_prev[8] !== SalidaALU_expected_prev[8] )
		&& ((SalidaALU_expected_prev[8] !== last_SalidaALU_exp[8]) ||
			on_first_change[1])
	)
	begin
		$display ("ERROR! Vector Mismatch for output port SalidaALU[8] :: @time = %t",  $realtime);
		$display ("     Expected value = %b", SalidaALU_expected_prev);
		$display ("     Real value = %b", SalidaALU_prev);
		nummismatches = nummismatches + 1;
		on_first_change[1] = 1'b0;
		last_SalidaALU_exp[8] = SalidaALU_expected_prev[8];
	end
	if (
		( SalidaALU_expected_prev[9] !== 1'bx ) && ( SalidaALU_prev[9] !== SalidaALU_expected_prev[9] )
		&& ((SalidaALU_expected_prev[9] !== last_SalidaALU_exp[9]) ||
			on_first_change[1])
	)
	begin
		$display ("ERROR! Vector Mismatch for output port SalidaALU[9] :: @time = %t",  $realtime);
		$display ("     Expected value = %b", SalidaALU_expected_prev);
		$display ("     Real value = %b", SalidaALU_prev);
		nummismatches = nummismatches + 1;
		on_first_change[1] = 1'b0;
		last_SalidaALU_exp[9] = SalidaALU_expected_prev[9];
	end
	if (
		( SalidaALU_expected_prev[10] !== 1'bx ) && ( SalidaALU_prev[10] !== SalidaALU_expected_prev[10] )
		&& ((SalidaALU_expected_prev[10] !== last_SalidaALU_exp[10]) ||
			on_first_change[1])
	)
	begin
		$display ("ERROR! Vector Mismatch for output port SalidaALU[10] :: @time = %t",  $realtime);
		$display ("     Expected value = %b", SalidaALU_expected_prev);
		$display ("     Real value = %b", SalidaALU_prev);
		nummismatches = nummismatches + 1;
		on_first_change[1] = 1'b0;
		last_SalidaALU_exp[10] = SalidaALU_expected_prev[10];
	end
	if (
		( SalidaALU_expected_prev[11] !== 1'bx ) && ( SalidaALU_prev[11] !== SalidaALU_expected_prev[11] )
		&& ((SalidaALU_expected_prev[11] !== last_SalidaALU_exp[11]) ||
			on_first_change[1])
	)
	begin
		$display ("ERROR! Vector Mismatch for output port SalidaALU[11] :: @time = %t",  $realtime);
		$display ("     Expected value = %b", SalidaALU_expected_prev);
		$display ("     Real value = %b", SalidaALU_prev);
		nummismatches = nummismatches + 1;
		on_first_change[1] = 1'b0;
		last_SalidaALU_exp[11] = SalidaALU_expected_prev[11];
	end
	if (
		( SalidaALU_expected_prev[12] !== 1'bx ) && ( SalidaALU_prev[12] !== SalidaALU_expected_prev[12] )
		&& ((SalidaALU_expected_prev[12] !== last_SalidaALU_exp[12]) ||
			on_first_change[1])
	)
	begin
		$display ("ERROR! Vector Mismatch for output port SalidaALU[12] :: @time = %t",  $realtime);
		$display ("     Expected value = %b", SalidaALU_expected_prev);
		$display ("     Real value = %b", SalidaALU_prev);
		nummismatches = nummismatches + 1;
		on_first_change[1] = 1'b0;
		last_SalidaALU_exp[12] = SalidaALU_expected_prev[12];
	end
	if (
		( SalidaALU_expected_prev[13] !== 1'bx ) && ( SalidaALU_prev[13] !== SalidaALU_expected_prev[13] )
		&& ((SalidaALU_expected_prev[13] !== last_SalidaALU_exp[13]) ||
			on_first_change[1])
	)
	begin
		$display ("ERROR! Vector Mismatch for output port SalidaALU[13] :: @time = %t",  $realtime);
		$display ("     Expected value = %b", SalidaALU_expected_prev);
		$display ("     Real value = %b", SalidaALU_prev);
		nummismatches = nummismatches + 1;
		on_first_change[1] = 1'b0;
		last_SalidaALU_exp[13] = SalidaALU_expected_prev[13];
	end
	if (
		( SalidaALU_expected_prev[14] !== 1'bx ) && ( SalidaALU_prev[14] !== SalidaALU_expected_prev[14] )
		&& ((SalidaALU_expected_prev[14] !== last_SalidaALU_exp[14]) ||
			on_first_change[1])
	)
	begin
		$display ("ERROR! Vector Mismatch for output port SalidaALU[14] :: @time = %t",  $realtime);
		$display ("     Expected value = %b", SalidaALU_expected_prev);
		$display ("     Real value = %b", SalidaALU_prev);
		nummismatches = nummismatches + 1;
		on_first_change[1] = 1'b0;
		last_SalidaALU_exp[14] = SalidaALU_expected_prev[14];
	end
	if (
		( SalidaALU_expected_prev[15] !== 1'bx ) && ( SalidaALU_prev[15] !== SalidaALU_expected_prev[15] )
		&& ((SalidaALU_expected_prev[15] !== last_SalidaALU_exp[15]) ||
			on_first_change[1])
	)
	begin
		$display ("ERROR! Vector Mismatch for output port SalidaALU[15] :: @time = %t",  $realtime);
		$display ("     Expected value = %b", SalidaALU_expected_prev);
		$display ("     Real value = %b", SalidaALU_prev);
		nummismatches = nummismatches + 1;
		on_first_change[1] = 1'b0;
		last_SalidaALU_exp[15] = SalidaALU_expected_prev[15];
	end
	if (
		( SalidaALU_expected_prev[16] !== 1'bx ) && ( SalidaALU_prev[16] !== SalidaALU_expected_prev[16] )
		&& ((SalidaALU_expected_prev[16] !== last_SalidaALU_exp[16]) ||
			on_first_change[1])
	)
	begin
		$display ("ERROR! Vector Mismatch for output port SalidaALU[16] :: @time = %t",  $realtime);
		$display ("     Expected value = %b", SalidaALU_expected_prev);
		$display ("     Real value = %b", SalidaALU_prev);
		nummismatches = nummismatches + 1;
		on_first_change[1] = 1'b0;
		last_SalidaALU_exp[16] = SalidaALU_expected_prev[16];
	end
	if (
		( SalidaALU_expected_prev[17] !== 1'bx ) && ( SalidaALU_prev[17] !== SalidaALU_expected_prev[17] )
		&& ((SalidaALU_expected_prev[17] !== last_SalidaALU_exp[17]) ||
			on_first_change[1])
	)
	begin
		$display ("ERROR! Vector Mismatch for output port SalidaALU[17] :: @time = %t",  $realtime);
		$display ("     Expected value = %b", SalidaALU_expected_prev);
		$display ("     Real value = %b", SalidaALU_prev);
		nummismatches = nummismatches + 1;
		on_first_change[1] = 1'b0;
		last_SalidaALU_exp[17] = SalidaALU_expected_prev[17];
	end
	if (
		( SalidaALU_expected_prev[18] !== 1'bx ) && ( SalidaALU_prev[18] !== SalidaALU_expected_prev[18] )
		&& ((SalidaALU_expected_prev[18] !== last_SalidaALU_exp[18]) ||
			on_first_change[1])
	)
	begin
		$display ("ERROR! Vector Mismatch for output port SalidaALU[18] :: @time = %t",  $realtime);
		$display ("     Expected value = %b", SalidaALU_expected_prev);
		$display ("     Real value = %b", SalidaALU_prev);
		nummismatches = nummismatches + 1;
		on_first_change[1] = 1'b0;
		last_SalidaALU_exp[18] = SalidaALU_expected_prev[18];
	end
	if (
		( SalidaALU_expected_prev[19] !== 1'bx ) && ( SalidaALU_prev[19] !== SalidaALU_expected_prev[19] )
		&& ((SalidaALU_expected_prev[19] !== last_SalidaALU_exp[19]) ||
			on_first_change[1])
	)
	begin
		$display ("ERROR! Vector Mismatch for output port SalidaALU[19] :: @time = %t",  $realtime);
		$display ("     Expected value = %b", SalidaALU_expected_prev);
		$display ("     Real value = %b", SalidaALU_prev);
		nummismatches = nummismatches + 1;
		on_first_change[1] = 1'b0;
		last_SalidaALU_exp[19] = SalidaALU_expected_prev[19];
	end
	if (
		( SalidaALU_expected_prev[20] !== 1'bx ) && ( SalidaALU_prev[20] !== SalidaALU_expected_prev[20] )
		&& ((SalidaALU_expected_prev[20] !== last_SalidaALU_exp[20]) ||
			on_first_change[1])
	)
	begin
		$display ("ERROR! Vector Mismatch for output port SalidaALU[20] :: @time = %t",  $realtime);
		$display ("     Expected value = %b", SalidaALU_expected_prev);
		$display ("     Real value = %b", SalidaALU_prev);
		nummismatches = nummismatches + 1;
		on_first_change[1] = 1'b0;
		last_SalidaALU_exp[20] = SalidaALU_expected_prev[20];
	end
	if (
		( SalidaALU_expected_prev[21] !== 1'bx ) && ( SalidaALU_prev[21] !== SalidaALU_expected_prev[21] )
		&& ((SalidaALU_expected_prev[21] !== last_SalidaALU_exp[21]) ||
			on_first_change[1])
	)
	begin
		$display ("ERROR! Vector Mismatch for output port SalidaALU[21] :: @time = %t",  $realtime);
		$display ("     Expected value = %b", SalidaALU_expected_prev);
		$display ("     Real value = %b", SalidaALU_prev);
		nummismatches = nummismatches + 1;
		on_first_change[1] = 1'b0;
		last_SalidaALU_exp[21] = SalidaALU_expected_prev[21];
	end
	if (
		( SalidaALU_expected_prev[22] !== 1'bx ) && ( SalidaALU_prev[22] !== SalidaALU_expected_prev[22] )
		&& ((SalidaALU_expected_prev[22] !== last_SalidaALU_exp[22]) ||
			on_first_change[1])
	)
	begin
		$display ("ERROR! Vector Mismatch for output port SalidaALU[22] :: @time = %t",  $realtime);
		$display ("     Expected value = %b", SalidaALU_expected_prev);
		$display ("     Real value = %b", SalidaALU_prev);
		nummismatches = nummismatches + 1;
		on_first_change[1] = 1'b0;
		last_SalidaALU_exp[22] = SalidaALU_expected_prev[22];
	end
	if (
		( SalidaALU_expected_prev[23] !== 1'bx ) && ( SalidaALU_prev[23] !== SalidaALU_expected_prev[23] )
		&& ((SalidaALU_expected_prev[23] !== last_SalidaALU_exp[23]) ||
			on_first_change[1])
	)
	begin
		$display ("ERROR! Vector Mismatch for output port SalidaALU[23] :: @time = %t",  $realtime);
		$display ("     Expected value = %b", SalidaALU_expected_prev);
		$display ("     Real value = %b", SalidaALU_prev);
		nummismatches = nummismatches + 1;
		on_first_change[1] = 1'b0;
		last_SalidaALU_exp[23] = SalidaALU_expected_prev[23];
	end
	if (
		( SalidaALU_expected_prev[24] !== 1'bx ) && ( SalidaALU_prev[24] !== SalidaALU_expected_prev[24] )
		&& ((SalidaALU_expected_prev[24] !== last_SalidaALU_exp[24]) ||
			on_first_change[1])
	)
	begin
		$display ("ERROR! Vector Mismatch for output port SalidaALU[24] :: @time = %t",  $realtime);
		$display ("     Expected value = %b", SalidaALU_expected_prev);
		$display ("     Real value = %b", SalidaALU_prev);
		nummismatches = nummismatches + 1;
		on_first_change[1] = 1'b0;
		last_SalidaALU_exp[24] = SalidaALU_expected_prev[24];
	end
	if (
		( SalidaALU_expected_prev[25] !== 1'bx ) && ( SalidaALU_prev[25] !== SalidaALU_expected_prev[25] )
		&& ((SalidaALU_expected_prev[25] !== last_SalidaALU_exp[25]) ||
			on_first_change[1])
	)
	begin
		$display ("ERROR! Vector Mismatch for output port SalidaALU[25] :: @time = %t",  $realtime);
		$display ("     Expected value = %b", SalidaALU_expected_prev);
		$display ("     Real value = %b", SalidaALU_prev);
		nummismatches = nummismatches + 1;
		on_first_change[1] = 1'b0;
		last_SalidaALU_exp[25] = SalidaALU_expected_prev[25];
	end
	if (
		( SalidaALU_expected_prev[26] !== 1'bx ) && ( SalidaALU_prev[26] !== SalidaALU_expected_prev[26] )
		&& ((SalidaALU_expected_prev[26] !== last_SalidaALU_exp[26]) ||
			on_first_change[1])
	)
	begin
		$display ("ERROR! Vector Mismatch for output port SalidaALU[26] :: @time = %t",  $realtime);
		$display ("     Expected value = %b", SalidaALU_expected_prev);
		$display ("     Real value = %b", SalidaALU_prev);
		nummismatches = nummismatches + 1;
		on_first_change[1] = 1'b0;
		last_SalidaALU_exp[26] = SalidaALU_expected_prev[26];
	end
	if (
		( SalidaALU_expected_prev[27] !== 1'bx ) && ( SalidaALU_prev[27] !== SalidaALU_expected_prev[27] )
		&& ((SalidaALU_expected_prev[27] !== last_SalidaALU_exp[27]) ||
			on_first_change[1])
	)
	begin
		$display ("ERROR! Vector Mismatch for output port SalidaALU[27] :: @time = %t",  $realtime);
		$display ("     Expected value = %b", SalidaALU_expected_prev);
		$display ("     Real value = %b", SalidaALU_prev);
		nummismatches = nummismatches + 1;
		on_first_change[1] = 1'b0;
		last_SalidaALU_exp[27] = SalidaALU_expected_prev[27];
	end
	if (
		( SalidaALU_expected_prev[28] !== 1'bx ) && ( SalidaALU_prev[28] !== SalidaALU_expected_prev[28] )
		&& ((SalidaALU_expected_prev[28] !== last_SalidaALU_exp[28]) ||
			on_first_change[1])
	)
	begin
		$display ("ERROR! Vector Mismatch for output port SalidaALU[28] :: @time = %t",  $realtime);
		$display ("     Expected value = %b", SalidaALU_expected_prev);
		$display ("     Real value = %b", SalidaALU_prev);
		nummismatches = nummismatches + 1;
		on_first_change[1] = 1'b0;
		last_SalidaALU_exp[28] = SalidaALU_expected_prev[28];
	end
	if (
		( SalidaALU_expected_prev[29] !== 1'bx ) && ( SalidaALU_prev[29] !== SalidaALU_expected_prev[29] )
		&& ((SalidaALU_expected_prev[29] !== last_SalidaALU_exp[29]) ||
			on_first_change[1])
	)
	begin
		$display ("ERROR! Vector Mismatch for output port SalidaALU[29] :: @time = %t",  $realtime);
		$display ("     Expected value = %b", SalidaALU_expected_prev);
		$display ("     Real value = %b", SalidaALU_prev);
		nummismatches = nummismatches + 1;
		on_first_change[1] = 1'b0;
		last_SalidaALU_exp[29] = SalidaALU_expected_prev[29];
	end
	if (
		( SalidaALU_expected_prev[30] !== 1'bx ) && ( SalidaALU_prev[30] !== SalidaALU_expected_prev[30] )
		&& ((SalidaALU_expected_prev[30] !== last_SalidaALU_exp[30]) ||
			on_first_change[1])
	)
	begin
		$display ("ERROR! Vector Mismatch for output port SalidaALU[30] :: @time = %t",  $realtime);
		$display ("     Expected value = %b", SalidaALU_expected_prev);
		$display ("     Real value = %b", SalidaALU_prev);
		nummismatches = nummismatches + 1;
		on_first_change[1] = 1'b0;
		last_SalidaALU_exp[30] = SalidaALU_expected_prev[30];
	end
	if (
		( SalidaALU_expected_prev[31] !== 1'bx ) && ( SalidaALU_prev[31] !== SalidaALU_expected_prev[31] )
		&& ((SalidaALU_expected_prev[31] !== last_SalidaALU_exp[31]) ||
			on_first_change[1])
	)
	begin
		$display ("ERROR! Vector Mismatch for output port SalidaALU[31] :: @time = %t",  $realtime);
		$display ("     Expected value = %b", SalidaALU_expected_prev);
		$display ("     Real value = %b", SalidaALU_prev);
		nummismatches = nummismatches + 1;
		on_first_change[1] = 1'b0;
		last_SalidaALU_exp[31] = SalidaALU_expected_prev[31];
	end
	if (
		( SalidaPC_expected_prev[0] !== 1'bx ) && ( SalidaPC_prev[0] !== SalidaPC_expected_prev[0] )
		&& ((SalidaPC_expected_prev[0] !== last_SalidaPC_exp[0]) ||
			on_first_change[2])
	)
	begin
		$display ("ERROR! Vector Mismatch for output port SalidaPC[0] :: @time = %t",  $realtime);
		$display ("     Expected value = %b", SalidaPC_expected_prev);
		$display ("     Real value = %b", SalidaPC_prev);
		nummismatches = nummismatches + 1;
		on_first_change[2] = 1'b0;
		last_SalidaPC_exp[0] = SalidaPC_expected_prev[0];
	end
	if (
		( SalidaPC_expected_prev[1] !== 1'bx ) && ( SalidaPC_prev[1] !== SalidaPC_expected_prev[1] )
		&& ((SalidaPC_expected_prev[1] !== last_SalidaPC_exp[1]) ||
			on_first_change[2])
	)
	begin
		$display ("ERROR! Vector Mismatch for output port SalidaPC[1] :: @time = %t",  $realtime);
		$display ("     Expected value = %b", SalidaPC_expected_prev);
		$display ("     Real value = %b", SalidaPC_prev);
		nummismatches = nummismatches + 1;
		on_first_change[2] = 1'b0;
		last_SalidaPC_exp[1] = SalidaPC_expected_prev[1];
	end
	if (
		( SalidaPC_expected_prev[2] !== 1'bx ) && ( SalidaPC_prev[2] !== SalidaPC_expected_prev[2] )
		&& ((SalidaPC_expected_prev[2] !== last_SalidaPC_exp[2]) ||
			on_first_change[2])
	)
	begin
		$display ("ERROR! Vector Mismatch for output port SalidaPC[2] :: @time = %t",  $realtime);
		$display ("     Expected value = %b", SalidaPC_expected_prev);
		$display ("     Real value = %b", SalidaPC_prev);
		nummismatches = nummismatches + 1;
		on_first_change[2] = 1'b0;
		last_SalidaPC_exp[2] = SalidaPC_expected_prev[2];
	end
	if (
		( SalidaPC_expected_prev[3] !== 1'bx ) && ( SalidaPC_prev[3] !== SalidaPC_expected_prev[3] )
		&& ((SalidaPC_expected_prev[3] !== last_SalidaPC_exp[3]) ||
			on_first_change[2])
	)
	begin
		$display ("ERROR! Vector Mismatch for output port SalidaPC[3] :: @time = %t",  $realtime);
		$display ("     Expected value = %b", SalidaPC_expected_prev);
		$display ("     Real value = %b", SalidaPC_prev);
		nummismatches = nummismatches + 1;
		on_first_change[2] = 1'b0;
		last_SalidaPC_exp[3] = SalidaPC_expected_prev[3];
	end
	if (
		( SalidaPC_expected_prev[4] !== 1'bx ) && ( SalidaPC_prev[4] !== SalidaPC_expected_prev[4] )
		&& ((SalidaPC_expected_prev[4] !== last_SalidaPC_exp[4]) ||
			on_first_change[2])
	)
	begin
		$display ("ERROR! Vector Mismatch for output port SalidaPC[4] :: @time = %t",  $realtime);
		$display ("     Expected value = %b", SalidaPC_expected_prev);
		$display ("     Real value = %b", SalidaPC_prev);
		nummismatches = nummismatches + 1;
		on_first_change[2] = 1'b0;
		last_SalidaPC_exp[4] = SalidaPC_expected_prev[4];
	end
	if (
		( SalidaPC_expected_prev[5] !== 1'bx ) && ( SalidaPC_prev[5] !== SalidaPC_expected_prev[5] )
		&& ((SalidaPC_expected_prev[5] !== last_SalidaPC_exp[5]) ||
			on_first_change[2])
	)
	begin
		$display ("ERROR! Vector Mismatch for output port SalidaPC[5] :: @time = %t",  $realtime);
		$display ("     Expected value = %b", SalidaPC_expected_prev);
		$display ("     Real value = %b", SalidaPC_prev);
		nummismatches = nummismatches + 1;
		on_first_change[2] = 1'b0;
		last_SalidaPC_exp[5] = SalidaPC_expected_prev[5];
	end
	if (
		( SalidaPC_expected_prev[6] !== 1'bx ) && ( SalidaPC_prev[6] !== SalidaPC_expected_prev[6] )
		&& ((SalidaPC_expected_prev[6] !== last_SalidaPC_exp[6]) ||
			on_first_change[2])
	)
	begin
		$display ("ERROR! Vector Mismatch for output port SalidaPC[6] :: @time = %t",  $realtime);
		$display ("     Expected value = %b", SalidaPC_expected_prev);
		$display ("     Real value = %b", SalidaPC_prev);
		nummismatches = nummismatches + 1;
		on_first_change[2] = 1'b0;
		last_SalidaPC_exp[6] = SalidaPC_expected_prev[6];
	end
	if (
		( SalidaPC_expected_prev[7] !== 1'bx ) && ( SalidaPC_prev[7] !== SalidaPC_expected_prev[7] )
		&& ((SalidaPC_expected_prev[7] !== last_SalidaPC_exp[7]) ||
			on_first_change[2])
	)
	begin
		$display ("ERROR! Vector Mismatch for output port SalidaPC[7] :: @time = %t",  $realtime);
		$display ("     Expected value = %b", SalidaPC_expected_prev);
		$display ("     Real value = %b", SalidaPC_prev);
		nummismatches = nummismatches + 1;
		on_first_change[2] = 1'b0;
		last_SalidaPC_exp[7] = SalidaPC_expected_prev[7];
	end
	if (
		( SalidaRAM_expected_prev[0] !== 1'bx ) && ( SalidaRAM_prev[0] !== SalidaRAM_expected_prev[0] )
		&& ((SalidaRAM_expected_prev[0] !== last_SalidaRAM_exp[0]) ||
			on_first_change[3])
	)
	begin
		$display ("ERROR! Vector Mismatch for output port SalidaRAM[0] :: @time = %t",  $realtime);
		$display ("     Expected value = %b", SalidaRAM_expected_prev);
		$display ("     Real value = %b", SalidaRAM_prev);
		nummismatches = nummismatches + 1;
		on_first_change[3] = 1'b0;
		last_SalidaRAM_exp[0] = SalidaRAM_expected_prev[0];
	end
	if (
		( SalidaRAM_expected_prev[1] !== 1'bx ) && ( SalidaRAM_prev[1] !== SalidaRAM_expected_prev[1] )
		&& ((SalidaRAM_expected_prev[1] !== last_SalidaRAM_exp[1]) ||
			on_first_change[3])
	)
	begin
		$display ("ERROR! Vector Mismatch for output port SalidaRAM[1] :: @time = %t",  $realtime);
		$display ("     Expected value = %b", SalidaRAM_expected_prev);
		$display ("     Real value = %b", SalidaRAM_prev);
		nummismatches = nummismatches + 1;
		on_first_change[3] = 1'b0;
		last_SalidaRAM_exp[1] = SalidaRAM_expected_prev[1];
	end
	if (
		( SalidaRAM_expected_prev[2] !== 1'bx ) && ( SalidaRAM_prev[2] !== SalidaRAM_expected_prev[2] )
		&& ((SalidaRAM_expected_prev[2] !== last_SalidaRAM_exp[2]) ||
			on_first_change[3])
	)
	begin
		$display ("ERROR! Vector Mismatch for output port SalidaRAM[2] :: @time = %t",  $realtime);
		$display ("     Expected value = %b", SalidaRAM_expected_prev);
		$display ("     Real value = %b", SalidaRAM_prev);
		nummismatches = nummismatches + 1;
		on_first_change[3] = 1'b0;
		last_SalidaRAM_exp[2] = SalidaRAM_expected_prev[2];
	end
	if (
		( SalidaRAM_expected_prev[3] !== 1'bx ) && ( SalidaRAM_prev[3] !== SalidaRAM_expected_prev[3] )
		&& ((SalidaRAM_expected_prev[3] !== last_SalidaRAM_exp[3]) ||
			on_first_change[3])
	)
	begin
		$display ("ERROR! Vector Mismatch for output port SalidaRAM[3] :: @time = %t",  $realtime);
		$display ("     Expected value = %b", SalidaRAM_expected_prev);
		$display ("     Real value = %b", SalidaRAM_prev);
		nummismatches = nummismatches + 1;
		on_first_change[3] = 1'b0;
		last_SalidaRAM_exp[3] = SalidaRAM_expected_prev[3];
	end
	if (
		( SalidaRAM_expected_prev[4] !== 1'bx ) && ( SalidaRAM_prev[4] !== SalidaRAM_expected_prev[4] )
		&& ((SalidaRAM_expected_prev[4] !== last_SalidaRAM_exp[4]) ||
			on_first_change[3])
	)
	begin
		$display ("ERROR! Vector Mismatch for output port SalidaRAM[4] :: @time = %t",  $realtime);
		$display ("     Expected value = %b", SalidaRAM_expected_prev);
		$display ("     Real value = %b", SalidaRAM_prev);
		nummismatches = nummismatches + 1;
		on_first_change[3] = 1'b0;
		last_SalidaRAM_exp[4] = SalidaRAM_expected_prev[4];
	end
	if (
		( SalidaRAM_expected_prev[5] !== 1'bx ) && ( SalidaRAM_prev[5] !== SalidaRAM_expected_prev[5] )
		&& ((SalidaRAM_expected_prev[5] !== last_SalidaRAM_exp[5]) ||
			on_first_change[3])
	)
	begin
		$display ("ERROR! Vector Mismatch for output port SalidaRAM[5] :: @time = %t",  $realtime);
		$display ("     Expected value = %b", SalidaRAM_expected_prev);
		$display ("     Real value = %b", SalidaRAM_prev);
		nummismatches = nummismatches + 1;
		on_first_change[3] = 1'b0;
		last_SalidaRAM_exp[5] = SalidaRAM_expected_prev[5];
	end
	if (
		( SalidaRAM_expected_prev[6] !== 1'bx ) && ( SalidaRAM_prev[6] !== SalidaRAM_expected_prev[6] )
		&& ((SalidaRAM_expected_prev[6] !== last_SalidaRAM_exp[6]) ||
			on_first_change[3])
	)
	begin
		$display ("ERROR! Vector Mismatch for output port SalidaRAM[6] :: @time = %t",  $realtime);
		$display ("     Expected value = %b", SalidaRAM_expected_prev);
		$display ("     Real value = %b", SalidaRAM_prev);
		nummismatches = nummismatches + 1;
		on_first_change[3] = 1'b0;
		last_SalidaRAM_exp[6] = SalidaRAM_expected_prev[6];
	end
	if (
		( SalidaRAM_expected_prev[7] !== 1'bx ) && ( SalidaRAM_prev[7] !== SalidaRAM_expected_prev[7] )
		&& ((SalidaRAM_expected_prev[7] !== last_SalidaRAM_exp[7]) ||
			on_first_change[3])
	)
	begin
		$display ("ERROR! Vector Mismatch for output port SalidaRAM[7] :: @time = %t",  $realtime);
		$display ("     Expected value = %b", SalidaRAM_expected_prev);
		$display ("     Real value = %b", SalidaRAM_prev);
		nummismatches = nummismatches + 1;
		on_first_change[3] = 1'b0;
		last_SalidaRAM_exp[7] = SalidaRAM_expected_prev[7];
	end
	if (
		( SalidaRAM_expected_prev[8] !== 1'bx ) && ( SalidaRAM_prev[8] !== SalidaRAM_expected_prev[8] )
		&& ((SalidaRAM_expected_prev[8] !== last_SalidaRAM_exp[8]) ||
			on_first_change[3])
	)
	begin
		$display ("ERROR! Vector Mismatch for output port SalidaRAM[8] :: @time = %t",  $realtime);
		$display ("     Expected value = %b", SalidaRAM_expected_prev);
		$display ("     Real value = %b", SalidaRAM_prev);
		nummismatches = nummismatches + 1;
		on_first_change[3] = 1'b0;
		last_SalidaRAM_exp[8] = SalidaRAM_expected_prev[8];
	end
	if (
		( SalidaRAM_expected_prev[9] !== 1'bx ) && ( SalidaRAM_prev[9] !== SalidaRAM_expected_prev[9] )
		&& ((SalidaRAM_expected_prev[9] !== last_SalidaRAM_exp[9]) ||
			on_first_change[3])
	)
	begin
		$display ("ERROR! Vector Mismatch for output port SalidaRAM[9] :: @time = %t",  $realtime);
		$display ("     Expected value = %b", SalidaRAM_expected_prev);
		$display ("     Real value = %b", SalidaRAM_prev);
		nummismatches = nummismatches + 1;
		on_first_change[3] = 1'b0;
		last_SalidaRAM_exp[9] = SalidaRAM_expected_prev[9];
	end
	if (
		( SalidaRAM_expected_prev[10] !== 1'bx ) && ( SalidaRAM_prev[10] !== SalidaRAM_expected_prev[10] )
		&& ((SalidaRAM_expected_prev[10] !== last_SalidaRAM_exp[10]) ||
			on_first_change[3])
	)
	begin
		$display ("ERROR! Vector Mismatch for output port SalidaRAM[10] :: @time = %t",  $realtime);
		$display ("     Expected value = %b", SalidaRAM_expected_prev);
		$display ("     Real value = %b", SalidaRAM_prev);
		nummismatches = nummismatches + 1;
		on_first_change[3] = 1'b0;
		last_SalidaRAM_exp[10] = SalidaRAM_expected_prev[10];
	end
	if (
		( SalidaRAM_expected_prev[11] !== 1'bx ) && ( SalidaRAM_prev[11] !== SalidaRAM_expected_prev[11] )
		&& ((SalidaRAM_expected_prev[11] !== last_SalidaRAM_exp[11]) ||
			on_first_change[3])
	)
	begin
		$display ("ERROR! Vector Mismatch for output port SalidaRAM[11] :: @time = %t",  $realtime);
		$display ("     Expected value = %b", SalidaRAM_expected_prev);
		$display ("     Real value = %b", SalidaRAM_prev);
		nummismatches = nummismatches + 1;
		on_first_change[3] = 1'b0;
		last_SalidaRAM_exp[11] = SalidaRAM_expected_prev[11];
	end
	if (
		( SalidaRAM_expected_prev[12] !== 1'bx ) && ( SalidaRAM_prev[12] !== SalidaRAM_expected_prev[12] )
		&& ((SalidaRAM_expected_prev[12] !== last_SalidaRAM_exp[12]) ||
			on_first_change[3])
	)
	begin
		$display ("ERROR! Vector Mismatch for output port SalidaRAM[12] :: @time = %t",  $realtime);
		$display ("     Expected value = %b", SalidaRAM_expected_prev);
		$display ("     Real value = %b", SalidaRAM_prev);
		nummismatches = nummismatches + 1;
		on_first_change[3] = 1'b0;
		last_SalidaRAM_exp[12] = SalidaRAM_expected_prev[12];
	end
	if (
		( SalidaRAM_expected_prev[13] !== 1'bx ) && ( SalidaRAM_prev[13] !== SalidaRAM_expected_prev[13] )
		&& ((SalidaRAM_expected_prev[13] !== last_SalidaRAM_exp[13]) ||
			on_first_change[3])
	)
	begin
		$display ("ERROR! Vector Mismatch for output port SalidaRAM[13] :: @time = %t",  $realtime);
		$display ("     Expected value = %b", SalidaRAM_expected_prev);
		$display ("     Real value = %b", SalidaRAM_prev);
		nummismatches = nummismatches + 1;
		on_first_change[3] = 1'b0;
		last_SalidaRAM_exp[13] = SalidaRAM_expected_prev[13];
	end
	if (
		( SalidaRAM_expected_prev[14] !== 1'bx ) && ( SalidaRAM_prev[14] !== SalidaRAM_expected_prev[14] )
		&& ((SalidaRAM_expected_prev[14] !== last_SalidaRAM_exp[14]) ||
			on_first_change[3])
	)
	begin
		$display ("ERROR! Vector Mismatch for output port SalidaRAM[14] :: @time = %t",  $realtime);
		$display ("     Expected value = %b", SalidaRAM_expected_prev);
		$display ("     Real value = %b", SalidaRAM_prev);
		nummismatches = nummismatches + 1;
		on_first_change[3] = 1'b0;
		last_SalidaRAM_exp[14] = SalidaRAM_expected_prev[14];
	end
	if (
		( SalidaRAM_expected_prev[15] !== 1'bx ) && ( SalidaRAM_prev[15] !== SalidaRAM_expected_prev[15] )
		&& ((SalidaRAM_expected_prev[15] !== last_SalidaRAM_exp[15]) ||
			on_first_change[3])
	)
	begin
		$display ("ERROR! Vector Mismatch for output port SalidaRAM[15] :: @time = %t",  $realtime);
		$display ("     Expected value = %b", SalidaRAM_expected_prev);
		$display ("     Real value = %b", SalidaRAM_prev);
		nummismatches = nummismatches + 1;
		on_first_change[3] = 1'b0;
		last_SalidaRAM_exp[15] = SalidaRAM_expected_prev[15];
	end
	if (
		( SalidaRAM_expected_prev[16] !== 1'bx ) && ( SalidaRAM_prev[16] !== SalidaRAM_expected_prev[16] )
		&& ((SalidaRAM_expected_prev[16] !== last_SalidaRAM_exp[16]) ||
			on_first_change[3])
	)
	begin
		$display ("ERROR! Vector Mismatch for output port SalidaRAM[16] :: @time = %t",  $realtime);
		$display ("     Expected value = %b", SalidaRAM_expected_prev);
		$display ("     Real value = %b", SalidaRAM_prev);
		nummismatches = nummismatches + 1;
		on_first_change[3] = 1'b0;
		last_SalidaRAM_exp[16] = SalidaRAM_expected_prev[16];
	end
	if (
		( SalidaRAM_expected_prev[17] !== 1'bx ) && ( SalidaRAM_prev[17] !== SalidaRAM_expected_prev[17] )
		&& ((SalidaRAM_expected_prev[17] !== last_SalidaRAM_exp[17]) ||
			on_first_change[3])
	)
	begin
		$display ("ERROR! Vector Mismatch for output port SalidaRAM[17] :: @time = %t",  $realtime);
		$display ("     Expected value = %b", SalidaRAM_expected_prev);
		$display ("     Real value = %b", SalidaRAM_prev);
		nummismatches = nummismatches + 1;
		on_first_change[3] = 1'b0;
		last_SalidaRAM_exp[17] = SalidaRAM_expected_prev[17];
	end
	if (
		( SalidaRAM_expected_prev[18] !== 1'bx ) && ( SalidaRAM_prev[18] !== SalidaRAM_expected_prev[18] )
		&& ((SalidaRAM_expected_prev[18] !== last_SalidaRAM_exp[18]) ||
			on_first_change[3])
	)
	begin
		$display ("ERROR! Vector Mismatch for output port SalidaRAM[18] :: @time = %t",  $realtime);
		$display ("     Expected value = %b", SalidaRAM_expected_prev);
		$display ("     Real value = %b", SalidaRAM_prev);
		nummismatches = nummismatches + 1;
		on_first_change[3] = 1'b0;
		last_SalidaRAM_exp[18] = SalidaRAM_expected_prev[18];
	end
	if (
		( SalidaRAM_expected_prev[19] !== 1'bx ) && ( SalidaRAM_prev[19] !== SalidaRAM_expected_prev[19] )
		&& ((SalidaRAM_expected_prev[19] !== last_SalidaRAM_exp[19]) ||
			on_first_change[3])
	)
	begin
		$display ("ERROR! Vector Mismatch for output port SalidaRAM[19] :: @time = %t",  $realtime);
		$display ("     Expected value = %b", SalidaRAM_expected_prev);
		$display ("     Real value = %b", SalidaRAM_prev);
		nummismatches = nummismatches + 1;
		on_first_change[3] = 1'b0;
		last_SalidaRAM_exp[19] = SalidaRAM_expected_prev[19];
	end
	if (
		( SalidaRAM_expected_prev[20] !== 1'bx ) && ( SalidaRAM_prev[20] !== SalidaRAM_expected_prev[20] )
		&& ((SalidaRAM_expected_prev[20] !== last_SalidaRAM_exp[20]) ||
			on_first_change[3])
	)
	begin
		$display ("ERROR! Vector Mismatch for output port SalidaRAM[20] :: @time = %t",  $realtime);
		$display ("     Expected value = %b", SalidaRAM_expected_prev);
		$display ("     Real value = %b", SalidaRAM_prev);
		nummismatches = nummismatches + 1;
		on_first_change[3] = 1'b0;
		last_SalidaRAM_exp[20] = SalidaRAM_expected_prev[20];
	end
	if (
		( SalidaRAM_expected_prev[21] !== 1'bx ) && ( SalidaRAM_prev[21] !== SalidaRAM_expected_prev[21] )
		&& ((SalidaRAM_expected_prev[21] !== last_SalidaRAM_exp[21]) ||
			on_first_change[3])
	)
	begin
		$display ("ERROR! Vector Mismatch for output port SalidaRAM[21] :: @time = %t",  $realtime);
		$display ("     Expected value = %b", SalidaRAM_expected_prev);
		$display ("     Real value = %b", SalidaRAM_prev);
		nummismatches = nummismatches + 1;
		on_first_change[3] = 1'b0;
		last_SalidaRAM_exp[21] = SalidaRAM_expected_prev[21];
	end
	if (
		( SalidaRAM_expected_prev[22] !== 1'bx ) && ( SalidaRAM_prev[22] !== SalidaRAM_expected_prev[22] )
		&& ((SalidaRAM_expected_prev[22] !== last_SalidaRAM_exp[22]) ||
			on_first_change[3])
	)
	begin
		$display ("ERROR! Vector Mismatch for output port SalidaRAM[22] :: @time = %t",  $realtime);
		$display ("     Expected value = %b", SalidaRAM_expected_prev);
		$display ("     Real value = %b", SalidaRAM_prev);
		nummismatches = nummismatches + 1;
		on_first_change[3] = 1'b0;
		last_SalidaRAM_exp[22] = SalidaRAM_expected_prev[22];
	end
	if (
		( SalidaRAM_expected_prev[23] !== 1'bx ) && ( SalidaRAM_prev[23] !== SalidaRAM_expected_prev[23] )
		&& ((SalidaRAM_expected_prev[23] !== last_SalidaRAM_exp[23]) ||
			on_first_change[3])
	)
	begin
		$display ("ERROR! Vector Mismatch for output port SalidaRAM[23] :: @time = %t",  $realtime);
		$display ("     Expected value = %b", SalidaRAM_expected_prev);
		$display ("     Real value = %b", SalidaRAM_prev);
		nummismatches = nummismatches + 1;
		on_first_change[3] = 1'b0;
		last_SalidaRAM_exp[23] = SalidaRAM_expected_prev[23];
	end
	if (
		( SalidaRAM_expected_prev[24] !== 1'bx ) && ( SalidaRAM_prev[24] !== SalidaRAM_expected_prev[24] )
		&& ((SalidaRAM_expected_prev[24] !== last_SalidaRAM_exp[24]) ||
			on_first_change[3])
	)
	begin
		$display ("ERROR! Vector Mismatch for output port SalidaRAM[24] :: @time = %t",  $realtime);
		$display ("     Expected value = %b", SalidaRAM_expected_prev);
		$display ("     Real value = %b", SalidaRAM_prev);
		nummismatches = nummismatches + 1;
		on_first_change[3] = 1'b0;
		last_SalidaRAM_exp[24] = SalidaRAM_expected_prev[24];
	end
	if (
		( SalidaRAM_expected_prev[25] !== 1'bx ) && ( SalidaRAM_prev[25] !== SalidaRAM_expected_prev[25] )
		&& ((SalidaRAM_expected_prev[25] !== last_SalidaRAM_exp[25]) ||
			on_first_change[3])
	)
	begin
		$display ("ERROR! Vector Mismatch for output port SalidaRAM[25] :: @time = %t",  $realtime);
		$display ("     Expected value = %b", SalidaRAM_expected_prev);
		$display ("     Real value = %b", SalidaRAM_prev);
		nummismatches = nummismatches + 1;
		on_first_change[3] = 1'b0;
		last_SalidaRAM_exp[25] = SalidaRAM_expected_prev[25];
	end
	if (
		( SalidaRAM_expected_prev[26] !== 1'bx ) && ( SalidaRAM_prev[26] !== SalidaRAM_expected_prev[26] )
		&& ((SalidaRAM_expected_prev[26] !== last_SalidaRAM_exp[26]) ||
			on_first_change[3])
	)
	begin
		$display ("ERROR! Vector Mismatch for output port SalidaRAM[26] :: @time = %t",  $realtime);
		$display ("     Expected value = %b", SalidaRAM_expected_prev);
		$display ("     Real value = %b", SalidaRAM_prev);
		nummismatches = nummismatches + 1;
		on_first_change[3] = 1'b0;
		last_SalidaRAM_exp[26] = SalidaRAM_expected_prev[26];
	end
	if (
		( SalidaRAM_expected_prev[27] !== 1'bx ) && ( SalidaRAM_prev[27] !== SalidaRAM_expected_prev[27] )
		&& ((SalidaRAM_expected_prev[27] !== last_SalidaRAM_exp[27]) ||
			on_first_change[3])
	)
	begin
		$display ("ERROR! Vector Mismatch for output port SalidaRAM[27] :: @time = %t",  $realtime);
		$display ("     Expected value = %b", SalidaRAM_expected_prev);
		$display ("     Real value = %b", SalidaRAM_prev);
		nummismatches = nummismatches + 1;
		on_first_change[3] = 1'b0;
		last_SalidaRAM_exp[27] = SalidaRAM_expected_prev[27];
	end
	if (
		( SalidaRAM_expected_prev[28] !== 1'bx ) && ( SalidaRAM_prev[28] !== SalidaRAM_expected_prev[28] )
		&& ((SalidaRAM_expected_prev[28] !== last_SalidaRAM_exp[28]) ||
			on_first_change[3])
	)
	begin
		$display ("ERROR! Vector Mismatch for output port SalidaRAM[28] :: @time = %t",  $realtime);
		$display ("     Expected value = %b", SalidaRAM_expected_prev);
		$display ("     Real value = %b", SalidaRAM_prev);
		nummismatches = nummismatches + 1;
		on_first_change[3] = 1'b0;
		last_SalidaRAM_exp[28] = SalidaRAM_expected_prev[28];
	end
	if (
		( SalidaRAM_expected_prev[29] !== 1'bx ) && ( SalidaRAM_prev[29] !== SalidaRAM_expected_prev[29] )
		&& ((SalidaRAM_expected_prev[29] !== last_SalidaRAM_exp[29]) ||
			on_first_change[3])
	)
	begin
		$display ("ERROR! Vector Mismatch for output port SalidaRAM[29] :: @time = %t",  $realtime);
		$display ("     Expected value = %b", SalidaRAM_expected_prev);
		$display ("     Real value = %b", SalidaRAM_prev);
		nummismatches = nummismatches + 1;
		on_first_change[3] = 1'b0;
		last_SalidaRAM_exp[29] = SalidaRAM_expected_prev[29];
	end
	if (
		( SalidaRAM_expected_prev[30] !== 1'bx ) && ( SalidaRAM_prev[30] !== SalidaRAM_expected_prev[30] )
		&& ((SalidaRAM_expected_prev[30] !== last_SalidaRAM_exp[30]) ||
			on_first_change[3])
	)
	begin
		$display ("ERROR! Vector Mismatch for output port SalidaRAM[30] :: @time = %t",  $realtime);
		$display ("     Expected value = %b", SalidaRAM_expected_prev);
		$display ("     Real value = %b", SalidaRAM_prev);
		nummismatches = nummismatches + 1;
		on_first_change[3] = 1'b0;
		last_SalidaRAM_exp[30] = SalidaRAM_expected_prev[30];
	end
	if (
		( SalidaRAM_expected_prev[31] !== 1'bx ) && ( SalidaRAM_prev[31] !== SalidaRAM_expected_prev[31] )
		&& ((SalidaRAM_expected_prev[31] !== last_SalidaRAM_exp[31]) ||
			on_first_change[3])
	)
	begin
		$display ("ERROR! Vector Mismatch for output port SalidaRAM[31] :: @time = %t",  $realtime);
		$display ("     Expected value = %b", SalidaRAM_expected_prev);
		$display ("     Real value = %b", SalidaRAM_prev);
		nummismatches = nummismatches + 1;
		on_first_change[3] = 1'b0;
		last_SalidaRAM_exp[31] = SalidaRAM_expected_prev[31];
	end
	if (
		( SalidaRF1_expected_prev[0] !== 1'bx ) && ( SalidaRF1_prev[0] !== SalidaRF1_expected_prev[0] )
		&& ((SalidaRF1_expected_prev[0] !== last_SalidaRF1_exp[0]) ||
			on_first_change[4])
	)
	begin
		$display ("ERROR! Vector Mismatch for output port SalidaRF1[0] :: @time = %t",  $realtime);
		$display ("     Expected value = %b", SalidaRF1_expected_prev);
		$display ("     Real value = %b", SalidaRF1_prev);
		nummismatches = nummismatches + 1;
		on_first_change[4] = 1'b0;
		last_SalidaRF1_exp[0] = SalidaRF1_expected_prev[0];
	end
	if (
		( SalidaRF1_expected_prev[1] !== 1'bx ) && ( SalidaRF1_prev[1] !== SalidaRF1_expected_prev[1] )
		&& ((SalidaRF1_expected_prev[1] !== last_SalidaRF1_exp[1]) ||
			on_first_change[4])
	)
	begin
		$display ("ERROR! Vector Mismatch for output port SalidaRF1[1] :: @time = %t",  $realtime);
		$display ("     Expected value = %b", SalidaRF1_expected_prev);
		$display ("     Real value = %b", SalidaRF1_prev);
		nummismatches = nummismatches + 1;
		on_first_change[4] = 1'b0;
		last_SalidaRF1_exp[1] = SalidaRF1_expected_prev[1];
	end
	if (
		( SalidaRF1_expected_prev[2] !== 1'bx ) && ( SalidaRF1_prev[2] !== SalidaRF1_expected_prev[2] )
		&& ((SalidaRF1_expected_prev[2] !== last_SalidaRF1_exp[2]) ||
			on_first_change[4])
	)
	begin
		$display ("ERROR! Vector Mismatch for output port SalidaRF1[2] :: @time = %t",  $realtime);
		$display ("     Expected value = %b", SalidaRF1_expected_prev);
		$display ("     Real value = %b", SalidaRF1_prev);
		nummismatches = nummismatches + 1;
		on_first_change[4] = 1'b0;
		last_SalidaRF1_exp[2] = SalidaRF1_expected_prev[2];
	end
	if (
		( SalidaRF1_expected_prev[3] !== 1'bx ) && ( SalidaRF1_prev[3] !== SalidaRF1_expected_prev[3] )
		&& ((SalidaRF1_expected_prev[3] !== last_SalidaRF1_exp[3]) ||
			on_first_change[4])
	)
	begin
		$display ("ERROR! Vector Mismatch for output port SalidaRF1[3] :: @time = %t",  $realtime);
		$display ("     Expected value = %b", SalidaRF1_expected_prev);
		$display ("     Real value = %b", SalidaRF1_prev);
		nummismatches = nummismatches + 1;
		on_first_change[4] = 1'b0;
		last_SalidaRF1_exp[3] = SalidaRF1_expected_prev[3];
	end
	if (
		( SalidaRF1_expected_prev[4] !== 1'bx ) && ( SalidaRF1_prev[4] !== SalidaRF1_expected_prev[4] )
		&& ((SalidaRF1_expected_prev[4] !== last_SalidaRF1_exp[4]) ||
			on_first_change[4])
	)
	begin
		$display ("ERROR! Vector Mismatch for output port SalidaRF1[4] :: @time = %t",  $realtime);
		$display ("     Expected value = %b", SalidaRF1_expected_prev);
		$display ("     Real value = %b", SalidaRF1_prev);
		nummismatches = nummismatches + 1;
		on_first_change[4] = 1'b0;
		last_SalidaRF1_exp[4] = SalidaRF1_expected_prev[4];
	end
	if (
		( SalidaRF1_expected_prev[5] !== 1'bx ) && ( SalidaRF1_prev[5] !== SalidaRF1_expected_prev[5] )
		&& ((SalidaRF1_expected_prev[5] !== last_SalidaRF1_exp[5]) ||
			on_first_change[4])
	)
	begin
		$display ("ERROR! Vector Mismatch for output port SalidaRF1[5] :: @time = %t",  $realtime);
		$display ("     Expected value = %b", SalidaRF1_expected_prev);
		$display ("     Real value = %b", SalidaRF1_prev);
		nummismatches = nummismatches + 1;
		on_first_change[4] = 1'b0;
		last_SalidaRF1_exp[5] = SalidaRF1_expected_prev[5];
	end
	if (
		( SalidaRF1_expected_prev[6] !== 1'bx ) && ( SalidaRF1_prev[6] !== SalidaRF1_expected_prev[6] )
		&& ((SalidaRF1_expected_prev[6] !== last_SalidaRF1_exp[6]) ||
			on_first_change[4])
	)
	begin
		$display ("ERROR! Vector Mismatch for output port SalidaRF1[6] :: @time = %t",  $realtime);
		$display ("     Expected value = %b", SalidaRF1_expected_prev);
		$display ("     Real value = %b", SalidaRF1_prev);
		nummismatches = nummismatches + 1;
		on_first_change[4] = 1'b0;
		last_SalidaRF1_exp[6] = SalidaRF1_expected_prev[6];
	end
	if (
		( SalidaRF1_expected_prev[7] !== 1'bx ) && ( SalidaRF1_prev[7] !== SalidaRF1_expected_prev[7] )
		&& ((SalidaRF1_expected_prev[7] !== last_SalidaRF1_exp[7]) ||
			on_first_change[4])
	)
	begin
		$display ("ERROR! Vector Mismatch for output port SalidaRF1[7] :: @time = %t",  $realtime);
		$display ("     Expected value = %b", SalidaRF1_expected_prev);
		$display ("     Real value = %b", SalidaRF1_prev);
		nummismatches = nummismatches + 1;
		on_first_change[4] = 1'b0;
		last_SalidaRF1_exp[7] = SalidaRF1_expected_prev[7];
	end
	if (
		( SalidaRF1_expected_prev[8] !== 1'bx ) && ( SalidaRF1_prev[8] !== SalidaRF1_expected_prev[8] )
		&& ((SalidaRF1_expected_prev[8] !== last_SalidaRF1_exp[8]) ||
			on_first_change[4])
	)
	begin
		$display ("ERROR! Vector Mismatch for output port SalidaRF1[8] :: @time = %t",  $realtime);
		$display ("     Expected value = %b", SalidaRF1_expected_prev);
		$display ("     Real value = %b", SalidaRF1_prev);
		nummismatches = nummismatches + 1;
		on_first_change[4] = 1'b0;
		last_SalidaRF1_exp[8] = SalidaRF1_expected_prev[8];
	end
	if (
		( SalidaRF1_expected_prev[9] !== 1'bx ) && ( SalidaRF1_prev[9] !== SalidaRF1_expected_prev[9] )
		&& ((SalidaRF1_expected_prev[9] !== last_SalidaRF1_exp[9]) ||
			on_first_change[4])
	)
	begin
		$display ("ERROR! Vector Mismatch for output port SalidaRF1[9] :: @time = %t",  $realtime);
		$display ("     Expected value = %b", SalidaRF1_expected_prev);
		$display ("     Real value = %b", SalidaRF1_prev);
		nummismatches = nummismatches + 1;
		on_first_change[4] = 1'b0;
		last_SalidaRF1_exp[9] = SalidaRF1_expected_prev[9];
	end
	if (
		( SalidaRF1_expected_prev[10] !== 1'bx ) && ( SalidaRF1_prev[10] !== SalidaRF1_expected_prev[10] )
		&& ((SalidaRF1_expected_prev[10] !== last_SalidaRF1_exp[10]) ||
			on_first_change[4])
	)
	begin
		$display ("ERROR! Vector Mismatch for output port SalidaRF1[10] :: @time = %t",  $realtime);
		$display ("     Expected value = %b", SalidaRF1_expected_prev);
		$display ("     Real value = %b", SalidaRF1_prev);
		nummismatches = nummismatches + 1;
		on_first_change[4] = 1'b0;
		last_SalidaRF1_exp[10] = SalidaRF1_expected_prev[10];
	end
	if (
		( SalidaRF1_expected_prev[11] !== 1'bx ) && ( SalidaRF1_prev[11] !== SalidaRF1_expected_prev[11] )
		&& ((SalidaRF1_expected_prev[11] !== last_SalidaRF1_exp[11]) ||
			on_first_change[4])
	)
	begin
		$display ("ERROR! Vector Mismatch for output port SalidaRF1[11] :: @time = %t",  $realtime);
		$display ("     Expected value = %b", SalidaRF1_expected_prev);
		$display ("     Real value = %b", SalidaRF1_prev);
		nummismatches = nummismatches + 1;
		on_first_change[4] = 1'b0;
		last_SalidaRF1_exp[11] = SalidaRF1_expected_prev[11];
	end
	if (
		( SalidaRF1_expected_prev[12] !== 1'bx ) && ( SalidaRF1_prev[12] !== SalidaRF1_expected_prev[12] )
		&& ((SalidaRF1_expected_prev[12] !== last_SalidaRF1_exp[12]) ||
			on_first_change[4])
	)
	begin
		$display ("ERROR! Vector Mismatch for output port SalidaRF1[12] :: @time = %t",  $realtime);
		$display ("     Expected value = %b", SalidaRF1_expected_prev);
		$display ("     Real value = %b", SalidaRF1_prev);
		nummismatches = nummismatches + 1;
		on_first_change[4] = 1'b0;
		last_SalidaRF1_exp[12] = SalidaRF1_expected_prev[12];
	end
	if (
		( SalidaRF1_expected_prev[13] !== 1'bx ) && ( SalidaRF1_prev[13] !== SalidaRF1_expected_prev[13] )
		&& ((SalidaRF1_expected_prev[13] !== last_SalidaRF1_exp[13]) ||
			on_first_change[4])
	)
	begin
		$display ("ERROR! Vector Mismatch for output port SalidaRF1[13] :: @time = %t",  $realtime);
		$display ("     Expected value = %b", SalidaRF1_expected_prev);
		$display ("     Real value = %b", SalidaRF1_prev);
		nummismatches = nummismatches + 1;
		on_first_change[4] = 1'b0;
		last_SalidaRF1_exp[13] = SalidaRF1_expected_prev[13];
	end
	if (
		( SalidaRF1_expected_prev[14] !== 1'bx ) && ( SalidaRF1_prev[14] !== SalidaRF1_expected_prev[14] )
		&& ((SalidaRF1_expected_prev[14] !== last_SalidaRF1_exp[14]) ||
			on_first_change[4])
	)
	begin
		$display ("ERROR! Vector Mismatch for output port SalidaRF1[14] :: @time = %t",  $realtime);
		$display ("     Expected value = %b", SalidaRF1_expected_prev);
		$display ("     Real value = %b", SalidaRF1_prev);
		nummismatches = nummismatches + 1;
		on_first_change[4] = 1'b0;
		last_SalidaRF1_exp[14] = SalidaRF1_expected_prev[14];
	end
	if (
		( SalidaRF1_expected_prev[15] !== 1'bx ) && ( SalidaRF1_prev[15] !== SalidaRF1_expected_prev[15] )
		&& ((SalidaRF1_expected_prev[15] !== last_SalidaRF1_exp[15]) ||
			on_first_change[4])
	)
	begin
		$display ("ERROR! Vector Mismatch for output port SalidaRF1[15] :: @time = %t",  $realtime);
		$display ("     Expected value = %b", SalidaRF1_expected_prev);
		$display ("     Real value = %b", SalidaRF1_prev);
		nummismatches = nummismatches + 1;
		on_first_change[4] = 1'b0;
		last_SalidaRF1_exp[15] = SalidaRF1_expected_prev[15];
	end
	if (
		( SalidaRF1_expected_prev[16] !== 1'bx ) && ( SalidaRF1_prev[16] !== SalidaRF1_expected_prev[16] )
		&& ((SalidaRF1_expected_prev[16] !== last_SalidaRF1_exp[16]) ||
			on_first_change[4])
	)
	begin
		$display ("ERROR! Vector Mismatch for output port SalidaRF1[16] :: @time = %t",  $realtime);
		$display ("     Expected value = %b", SalidaRF1_expected_prev);
		$display ("     Real value = %b", SalidaRF1_prev);
		nummismatches = nummismatches + 1;
		on_first_change[4] = 1'b0;
		last_SalidaRF1_exp[16] = SalidaRF1_expected_prev[16];
	end
	if (
		( SalidaRF1_expected_prev[17] !== 1'bx ) && ( SalidaRF1_prev[17] !== SalidaRF1_expected_prev[17] )
		&& ((SalidaRF1_expected_prev[17] !== last_SalidaRF1_exp[17]) ||
			on_first_change[4])
	)
	begin
		$display ("ERROR! Vector Mismatch for output port SalidaRF1[17] :: @time = %t",  $realtime);
		$display ("     Expected value = %b", SalidaRF1_expected_prev);
		$display ("     Real value = %b", SalidaRF1_prev);
		nummismatches = nummismatches + 1;
		on_first_change[4] = 1'b0;
		last_SalidaRF1_exp[17] = SalidaRF1_expected_prev[17];
	end
	if (
		( SalidaRF1_expected_prev[18] !== 1'bx ) && ( SalidaRF1_prev[18] !== SalidaRF1_expected_prev[18] )
		&& ((SalidaRF1_expected_prev[18] !== last_SalidaRF1_exp[18]) ||
			on_first_change[4])
	)
	begin
		$display ("ERROR! Vector Mismatch for output port SalidaRF1[18] :: @time = %t",  $realtime);
		$display ("     Expected value = %b", SalidaRF1_expected_prev);
		$display ("     Real value = %b", SalidaRF1_prev);
		nummismatches = nummismatches + 1;
		on_first_change[4] = 1'b0;
		last_SalidaRF1_exp[18] = SalidaRF1_expected_prev[18];
	end
	if (
		( SalidaRF1_expected_prev[19] !== 1'bx ) && ( SalidaRF1_prev[19] !== SalidaRF1_expected_prev[19] )
		&& ((SalidaRF1_expected_prev[19] !== last_SalidaRF1_exp[19]) ||
			on_first_change[4])
	)
	begin
		$display ("ERROR! Vector Mismatch for output port SalidaRF1[19] :: @time = %t",  $realtime);
		$display ("     Expected value = %b", SalidaRF1_expected_prev);
		$display ("     Real value = %b", SalidaRF1_prev);
		nummismatches = nummismatches + 1;
		on_first_change[4] = 1'b0;
		last_SalidaRF1_exp[19] = SalidaRF1_expected_prev[19];
	end
	if (
		( SalidaRF1_expected_prev[20] !== 1'bx ) && ( SalidaRF1_prev[20] !== SalidaRF1_expected_prev[20] )
		&& ((SalidaRF1_expected_prev[20] !== last_SalidaRF1_exp[20]) ||
			on_first_change[4])
	)
	begin
		$display ("ERROR! Vector Mismatch for output port SalidaRF1[20] :: @time = %t",  $realtime);
		$display ("     Expected value = %b", SalidaRF1_expected_prev);
		$display ("     Real value = %b", SalidaRF1_prev);
		nummismatches = nummismatches + 1;
		on_first_change[4] = 1'b0;
		last_SalidaRF1_exp[20] = SalidaRF1_expected_prev[20];
	end
	if (
		( SalidaRF1_expected_prev[21] !== 1'bx ) && ( SalidaRF1_prev[21] !== SalidaRF1_expected_prev[21] )
		&& ((SalidaRF1_expected_prev[21] !== last_SalidaRF1_exp[21]) ||
			on_first_change[4])
	)
	begin
		$display ("ERROR! Vector Mismatch for output port SalidaRF1[21] :: @time = %t",  $realtime);
		$display ("     Expected value = %b", SalidaRF1_expected_prev);
		$display ("     Real value = %b", SalidaRF1_prev);
		nummismatches = nummismatches + 1;
		on_first_change[4] = 1'b0;
		last_SalidaRF1_exp[21] = SalidaRF1_expected_prev[21];
	end
	if (
		( SalidaRF1_expected_prev[22] !== 1'bx ) && ( SalidaRF1_prev[22] !== SalidaRF1_expected_prev[22] )
		&& ((SalidaRF1_expected_prev[22] !== last_SalidaRF1_exp[22]) ||
			on_first_change[4])
	)
	begin
		$display ("ERROR! Vector Mismatch for output port SalidaRF1[22] :: @time = %t",  $realtime);
		$display ("     Expected value = %b", SalidaRF1_expected_prev);
		$display ("     Real value = %b", SalidaRF1_prev);
		nummismatches = nummismatches + 1;
		on_first_change[4] = 1'b0;
		last_SalidaRF1_exp[22] = SalidaRF1_expected_prev[22];
	end
	if (
		( SalidaRF1_expected_prev[23] !== 1'bx ) && ( SalidaRF1_prev[23] !== SalidaRF1_expected_prev[23] )
		&& ((SalidaRF1_expected_prev[23] !== last_SalidaRF1_exp[23]) ||
			on_first_change[4])
	)
	begin
		$display ("ERROR! Vector Mismatch for output port SalidaRF1[23] :: @time = %t",  $realtime);
		$display ("     Expected value = %b", SalidaRF1_expected_prev);
		$display ("     Real value = %b", SalidaRF1_prev);
		nummismatches = nummismatches + 1;
		on_first_change[4] = 1'b0;
		last_SalidaRF1_exp[23] = SalidaRF1_expected_prev[23];
	end
	if (
		( SalidaRF1_expected_prev[24] !== 1'bx ) && ( SalidaRF1_prev[24] !== SalidaRF1_expected_prev[24] )
		&& ((SalidaRF1_expected_prev[24] !== last_SalidaRF1_exp[24]) ||
			on_first_change[4])
	)
	begin
		$display ("ERROR! Vector Mismatch for output port SalidaRF1[24] :: @time = %t",  $realtime);
		$display ("     Expected value = %b", SalidaRF1_expected_prev);
		$display ("     Real value = %b", SalidaRF1_prev);
		nummismatches = nummismatches + 1;
		on_first_change[4] = 1'b0;
		last_SalidaRF1_exp[24] = SalidaRF1_expected_prev[24];
	end
	if (
		( SalidaRF1_expected_prev[25] !== 1'bx ) && ( SalidaRF1_prev[25] !== SalidaRF1_expected_prev[25] )
		&& ((SalidaRF1_expected_prev[25] !== last_SalidaRF1_exp[25]) ||
			on_first_change[4])
	)
	begin
		$display ("ERROR! Vector Mismatch for output port SalidaRF1[25] :: @time = %t",  $realtime);
		$display ("     Expected value = %b", SalidaRF1_expected_prev);
		$display ("     Real value = %b", SalidaRF1_prev);
		nummismatches = nummismatches + 1;
		on_first_change[4] = 1'b0;
		last_SalidaRF1_exp[25] = SalidaRF1_expected_prev[25];
	end
	if (
		( SalidaRF1_expected_prev[26] !== 1'bx ) && ( SalidaRF1_prev[26] !== SalidaRF1_expected_prev[26] )
		&& ((SalidaRF1_expected_prev[26] !== last_SalidaRF1_exp[26]) ||
			on_first_change[4])
	)
	begin
		$display ("ERROR! Vector Mismatch for output port SalidaRF1[26] :: @time = %t",  $realtime);
		$display ("     Expected value = %b", SalidaRF1_expected_prev);
		$display ("     Real value = %b", SalidaRF1_prev);
		nummismatches = nummismatches + 1;
		on_first_change[4] = 1'b0;
		last_SalidaRF1_exp[26] = SalidaRF1_expected_prev[26];
	end
	if (
		( SalidaRF1_expected_prev[27] !== 1'bx ) && ( SalidaRF1_prev[27] !== SalidaRF1_expected_prev[27] )
		&& ((SalidaRF1_expected_prev[27] !== last_SalidaRF1_exp[27]) ||
			on_first_change[4])
	)
	begin
		$display ("ERROR! Vector Mismatch for output port SalidaRF1[27] :: @time = %t",  $realtime);
		$display ("     Expected value = %b", SalidaRF1_expected_prev);
		$display ("     Real value = %b", SalidaRF1_prev);
		nummismatches = nummismatches + 1;
		on_first_change[4] = 1'b0;
		last_SalidaRF1_exp[27] = SalidaRF1_expected_prev[27];
	end
	if (
		( SalidaRF1_expected_prev[28] !== 1'bx ) && ( SalidaRF1_prev[28] !== SalidaRF1_expected_prev[28] )
		&& ((SalidaRF1_expected_prev[28] !== last_SalidaRF1_exp[28]) ||
			on_first_change[4])
	)
	begin
		$display ("ERROR! Vector Mismatch for output port SalidaRF1[28] :: @time = %t",  $realtime);
		$display ("     Expected value = %b", SalidaRF1_expected_prev);
		$display ("     Real value = %b", SalidaRF1_prev);
		nummismatches = nummismatches + 1;
		on_first_change[4] = 1'b0;
		last_SalidaRF1_exp[28] = SalidaRF1_expected_prev[28];
	end
	if (
		( SalidaRF1_expected_prev[29] !== 1'bx ) && ( SalidaRF1_prev[29] !== SalidaRF1_expected_prev[29] )
		&& ((SalidaRF1_expected_prev[29] !== last_SalidaRF1_exp[29]) ||
			on_first_change[4])
	)
	begin
		$display ("ERROR! Vector Mismatch for output port SalidaRF1[29] :: @time = %t",  $realtime);
		$display ("     Expected value = %b", SalidaRF1_expected_prev);
		$display ("     Real value = %b", SalidaRF1_prev);
		nummismatches = nummismatches + 1;
		on_first_change[4] = 1'b0;
		last_SalidaRF1_exp[29] = SalidaRF1_expected_prev[29];
	end
	if (
		( SalidaRF1_expected_prev[30] !== 1'bx ) && ( SalidaRF1_prev[30] !== SalidaRF1_expected_prev[30] )
		&& ((SalidaRF1_expected_prev[30] !== last_SalidaRF1_exp[30]) ||
			on_first_change[4])
	)
	begin
		$display ("ERROR! Vector Mismatch for output port SalidaRF1[30] :: @time = %t",  $realtime);
		$display ("     Expected value = %b", SalidaRF1_expected_prev);
		$display ("     Real value = %b", SalidaRF1_prev);
		nummismatches = nummismatches + 1;
		on_first_change[4] = 1'b0;
		last_SalidaRF1_exp[30] = SalidaRF1_expected_prev[30];
	end
	if (
		( SalidaRF1_expected_prev[31] !== 1'bx ) && ( SalidaRF1_prev[31] !== SalidaRF1_expected_prev[31] )
		&& ((SalidaRF1_expected_prev[31] !== last_SalidaRF1_exp[31]) ||
			on_first_change[4])
	)
	begin
		$display ("ERROR! Vector Mismatch for output port SalidaRF1[31] :: @time = %t",  $realtime);
		$display ("     Expected value = %b", SalidaRF1_expected_prev);
		$display ("     Real value = %b", SalidaRF1_prev);
		nummismatches = nummismatches + 1;
		on_first_change[4] = 1'b0;
		last_SalidaRF1_exp[31] = SalidaRF1_expected_prev[31];
	end
	if (
		( SalidaRF2_expected_prev[0] !== 1'bx ) && ( SalidaRF2_prev[0] !== SalidaRF2_expected_prev[0] )
		&& ((SalidaRF2_expected_prev[0] !== last_SalidaRF2_exp[0]) ||
			on_first_change[5])
	)
	begin
		$display ("ERROR! Vector Mismatch for output port SalidaRF2[0] :: @time = %t",  $realtime);
		$display ("     Expected value = %b", SalidaRF2_expected_prev);
		$display ("     Real value = %b", SalidaRF2_prev);
		nummismatches = nummismatches + 1;
		on_first_change[5] = 1'b0;
		last_SalidaRF2_exp[0] = SalidaRF2_expected_prev[0];
	end
	if (
		( SalidaRF2_expected_prev[1] !== 1'bx ) && ( SalidaRF2_prev[1] !== SalidaRF2_expected_prev[1] )
		&& ((SalidaRF2_expected_prev[1] !== last_SalidaRF2_exp[1]) ||
			on_first_change[5])
	)
	begin
		$display ("ERROR! Vector Mismatch for output port SalidaRF2[1] :: @time = %t",  $realtime);
		$display ("     Expected value = %b", SalidaRF2_expected_prev);
		$display ("     Real value = %b", SalidaRF2_prev);
		nummismatches = nummismatches + 1;
		on_first_change[5] = 1'b0;
		last_SalidaRF2_exp[1] = SalidaRF2_expected_prev[1];
	end
	if (
		( SalidaRF2_expected_prev[2] !== 1'bx ) && ( SalidaRF2_prev[2] !== SalidaRF2_expected_prev[2] )
		&& ((SalidaRF2_expected_prev[2] !== last_SalidaRF2_exp[2]) ||
			on_first_change[5])
	)
	begin
		$display ("ERROR! Vector Mismatch for output port SalidaRF2[2] :: @time = %t",  $realtime);
		$display ("     Expected value = %b", SalidaRF2_expected_prev);
		$display ("     Real value = %b", SalidaRF2_prev);
		nummismatches = nummismatches + 1;
		on_first_change[5] = 1'b0;
		last_SalidaRF2_exp[2] = SalidaRF2_expected_prev[2];
	end
	if (
		( SalidaRF2_expected_prev[3] !== 1'bx ) && ( SalidaRF2_prev[3] !== SalidaRF2_expected_prev[3] )
		&& ((SalidaRF2_expected_prev[3] !== last_SalidaRF2_exp[3]) ||
			on_first_change[5])
	)
	begin
		$display ("ERROR! Vector Mismatch for output port SalidaRF2[3] :: @time = %t",  $realtime);
		$display ("     Expected value = %b", SalidaRF2_expected_prev);
		$display ("     Real value = %b", SalidaRF2_prev);
		nummismatches = nummismatches + 1;
		on_first_change[5] = 1'b0;
		last_SalidaRF2_exp[3] = SalidaRF2_expected_prev[3];
	end
	if (
		( SalidaRF2_expected_prev[4] !== 1'bx ) && ( SalidaRF2_prev[4] !== SalidaRF2_expected_prev[4] )
		&& ((SalidaRF2_expected_prev[4] !== last_SalidaRF2_exp[4]) ||
			on_first_change[5])
	)
	begin
		$display ("ERROR! Vector Mismatch for output port SalidaRF2[4] :: @time = %t",  $realtime);
		$display ("     Expected value = %b", SalidaRF2_expected_prev);
		$display ("     Real value = %b", SalidaRF2_prev);
		nummismatches = nummismatches + 1;
		on_first_change[5] = 1'b0;
		last_SalidaRF2_exp[4] = SalidaRF2_expected_prev[4];
	end
	if (
		( SalidaRF2_expected_prev[5] !== 1'bx ) && ( SalidaRF2_prev[5] !== SalidaRF2_expected_prev[5] )
		&& ((SalidaRF2_expected_prev[5] !== last_SalidaRF2_exp[5]) ||
			on_first_change[5])
	)
	begin
		$display ("ERROR! Vector Mismatch for output port SalidaRF2[5] :: @time = %t",  $realtime);
		$display ("     Expected value = %b", SalidaRF2_expected_prev);
		$display ("     Real value = %b", SalidaRF2_prev);
		nummismatches = nummismatches + 1;
		on_first_change[5] = 1'b0;
		last_SalidaRF2_exp[5] = SalidaRF2_expected_prev[5];
	end
	if (
		( SalidaRF2_expected_prev[6] !== 1'bx ) && ( SalidaRF2_prev[6] !== SalidaRF2_expected_prev[6] )
		&& ((SalidaRF2_expected_prev[6] !== last_SalidaRF2_exp[6]) ||
			on_first_change[5])
	)
	begin
		$display ("ERROR! Vector Mismatch for output port SalidaRF2[6] :: @time = %t",  $realtime);
		$display ("     Expected value = %b", SalidaRF2_expected_prev);
		$display ("     Real value = %b", SalidaRF2_prev);
		nummismatches = nummismatches + 1;
		on_first_change[5] = 1'b0;
		last_SalidaRF2_exp[6] = SalidaRF2_expected_prev[6];
	end
	if (
		( SalidaRF2_expected_prev[7] !== 1'bx ) && ( SalidaRF2_prev[7] !== SalidaRF2_expected_prev[7] )
		&& ((SalidaRF2_expected_prev[7] !== last_SalidaRF2_exp[7]) ||
			on_first_change[5])
	)
	begin
		$display ("ERROR! Vector Mismatch for output port SalidaRF2[7] :: @time = %t",  $realtime);
		$display ("     Expected value = %b", SalidaRF2_expected_prev);
		$display ("     Real value = %b", SalidaRF2_prev);
		nummismatches = nummismatches + 1;
		on_first_change[5] = 1'b0;
		last_SalidaRF2_exp[7] = SalidaRF2_expected_prev[7];
	end
	if (
		( SalidaRF2_expected_prev[8] !== 1'bx ) && ( SalidaRF2_prev[8] !== SalidaRF2_expected_prev[8] )
		&& ((SalidaRF2_expected_prev[8] !== last_SalidaRF2_exp[8]) ||
			on_first_change[5])
	)
	begin
		$display ("ERROR! Vector Mismatch for output port SalidaRF2[8] :: @time = %t",  $realtime);
		$display ("     Expected value = %b", SalidaRF2_expected_prev);
		$display ("     Real value = %b", SalidaRF2_prev);
		nummismatches = nummismatches + 1;
		on_first_change[5] = 1'b0;
		last_SalidaRF2_exp[8] = SalidaRF2_expected_prev[8];
	end
	if (
		( SalidaRF2_expected_prev[9] !== 1'bx ) && ( SalidaRF2_prev[9] !== SalidaRF2_expected_prev[9] )
		&& ((SalidaRF2_expected_prev[9] !== last_SalidaRF2_exp[9]) ||
			on_first_change[5])
	)
	begin
		$display ("ERROR! Vector Mismatch for output port SalidaRF2[9] :: @time = %t",  $realtime);
		$display ("     Expected value = %b", SalidaRF2_expected_prev);
		$display ("     Real value = %b", SalidaRF2_prev);
		nummismatches = nummismatches + 1;
		on_first_change[5] = 1'b0;
		last_SalidaRF2_exp[9] = SalidaRF2_expected_prev[9];
	end
	if (
		( SalidaRF2_expected_prev[10] !== 1'bx ) && ( SalidaRF2_prev[10] !== SalidaRF2_expected_prev[10] )
		&& ((SalidaRF2_expected_prev[10] !== last_SalidaRF2_exp[10]) ||
			on_first_change[5])
	)
	begin
		$display ("ERROR! Vector Mismatch for output port SalidaRF2[10] :: @time = %t",  $realtime);
		$display ("     Expected value = %b", SalidaRF2_expected_prev);
		$display ("     Real value = %b", SalidaRF2_prev);
		nummismatches = nummismatches + 1;
		on_first_change[5] = 1'b0;
		last_SalidaRF2_exp[10] = SalidaRF2_expected_prev[10];
	end
	if (
		( SalidaRF2_expected_prev[11] !== 1'bx ) && ( SalidaRF2_prev[11] !== SalidaRF2_expected_prev[11] )
		&& ((SalidaRF2_expected_prev[11] !== last_SalidaRF2_exp[11]) ||
			on_first_change[5])
	)
	begin
		$display ("ERROR! Vector Mismatch for output port SalidaRF2[11] :: @time = %t",  $realtime);
		$display ("     Expected value = %b", SalidaRF2_expected_prev);
		$display ("     Real value = %b", SalidaRF2_prev);
		nummismatches = nummismatches + 1;
		on_first_change[5] = 1'b0;
		last_SalidaRF2_exp[11] = SalidaRF2_expected_prev[11];
	end
	if (
		( SalidaRF2_expected_prev[12] !== 1'bx ) && ( SalidaRF2_prev[12] !== SalidaRF2_expected_prev[12] )
		&& ((SalidaRF2_expected_prev[12] !== last_SalidaRF2_exp[12]) ||
			on_first_change[5])
	)
	begin
		$display ("ERROR! Vector Mismatch for output port SalidaRF2[12] :: @time = %t",  $realtime);
		$display ("     Expected value = %b", SalidaRF2_expected_prev);
		$display ("     Real value = %b", SalidaRF2_prev);
		nummismatches = nummismatches + 1;
		on_first_change[5] = 1'b0;
		last_SalidaRF2_exp[12] = SalidaRF2_expected_prev[12];
	end
	if (
		( SalidaRF2_expected_prev[13] !== 1'bx ) && ( SalidaRF2_prev[13] !== SalidaRF2_expected_prev[13] )
		&& ((SalidaRF2_expected_prev[13] !== last_SalidaRF2_exp[13]) ||
			on_first_change[5])
	)
	begin
		$display ("ERROR! Vector Mismatch for output port SalidaRF2[13] :: @time = %t",  $realtime);
		$display ("     Expected value = %b", SalidaRF2_expected_prev);
		$display ("     Real value = %b", SalidaRF2_prev);
		nummismatches = nummismatches + 1;
		on_first_change[5] = 1'b0;
		last_SalidaRF2_exp[13] = SalidaRF2_expected_prev[13];
	end
	if (
		( SalidaRF2_expected_prev[14] !== 1'bx ) && ( SalidaRF2_prev[14] !== SalidaRF2_expected_prev[14] )
		&& ((SalidaRF2_expected_prev[14] !== last_SalidaRF2_exp[14]) ||
			on_first_change[5])
	)
	begin
		$display ("ERROR! Vector Mismatch for output port SalidaRF2[14] :: @time = %t",  $realtime);
		$display ("     Expected value = %b", SalidaRF2_expected_prev);
		$display ("     Real value = %b", SalidaRF2_prev);
		nummismatches = nummismatches + 1;
		on_first_change[5] = 1'b0;
		last_SalidaRF2_exp[14] = SalidaRF2_expected_prev[14];
	end
	if (
		( SalidaRF2_expected_prev[15] !== 1'bx ) && ( SalidaRF2_prev[15] !== SalidaRF2_expected_prev[15] )
		&& ((SalidaRF2_expected_prev[15] !== last_SalidaRF2_exp[15]) ||
			on_first_change[5])
	)
	begin
		$display ("ERROR! Vector Mismatch for output port SalidaRF2[15] :: @time = %t",  $realtime);
		$display ("     Expected value = %b", SalidaRF2_expected_prev);
		$display ("     Real value = %b", SalidaRF2_prev);
		nummismatches = nummismatches + 1;
		on_first_change[5] = 1'b0;
		last_SalidaRF2_exp[15] = SalidaRF2_expected_prev[15];
	end
	if (
		( SalidaRF2_expected_prev[16] !== 1'bx ) && ( SalidaRF2_prev[16] !== SalidaRF2_expected_prev[16] )
		&& ((SalidaRF2_expected_prev[16] !== last_SalidaRF2_exp[16]) ||
			on_first_change[5])
	)
	begin
		$display ("ERROR! Vector Mismatch for output port SalidaRF2[16] :: @time = %t",  $realtime);
		$display ("     Expected value = %b", SalidaRF2_expected_prev);
		$display ("     Real value = %b", SalidaRF2_prev);
		nummismatches = nummismatches + 1;
		on_first_change[5] = 1'b0;
		last_SalidaRF2_exp[16] = SalidaRF2_expected_prev[16];
	end
	if (
		( SalidaRF2_expected_prev[17] !== 1'bx ) && ( SalidaRF2_prev[17] !== SalidaRF2_expected_prev[17] )
		&& ((SalidaRF2_expected_prev[17] !== last_SalidaRF2_exp[17]) ||
			on_first_change[5])
	)
	begin
		$display ("ERROR! Vector Mismatch for output port SalidaRF2[17] :: @time = %t",  $realtime);
		$display ("     Expected value = %b", SalidaRF2_expected_prev);
		$display ("     Real value = %b", SalidaRF2_prev);
		nummismatches = nummismatches + 1;
		on_first_change[5] = 1'b0;
		last_SalidaRF2_exp[17] = SalidaRF2_expected_prev[17];
	end
	if (
		( SalidaRF2_expected_prev[18] !== 1'bx ) && ( SalidaRF2_prev[18] !== SalidaRF2_expected_prev[18] )
		&& ((SalidaRF2_expected_prev[18] !== last_SalidaRF2_exp[18]) ||
			on_first_change[5])
	)
	begin
		$display ("ERROR! Vector Mismatch for output port SalidaRF2[18] :: @time = %t",  $realtime);
		$display ("     Expected value = %b", SalidaRF2_expected_prev);
		$display ("     Real value = %b", SalidaRF2_prev);
		nummismatches = nummismatches + 1;
		on_first_change[5] = 1'b0;
		last_SalidaRF2_exp[18] = SalidaRF2_expected_prev[18];
	end
	if (
		( SalidaRF2_expected_prev[19] !== 1'bx ) && ( SalidaRF2_prev[19] !== SalidaRF2_expected_prev[19] )
		&& ((SalidaRF2_expected_prev[19] !== last_SalidaRF2_exp[19]) ||
			on_first_change[5])
	)
	begin
		$display ("ERROR! Vector Mismatch for output port SalidaRF2[19] :: @time = %t",  $realtime);
		$display ("     Expected value = %b", SalidaRF2_expected_prev);
		$display ("     Real value = %b", SalidaRF2_prev);
		nummismatches = nummismatches + 1;
		on_first_change[5] = 1'b0;
		last_SalidaRF2_exp[19] = SalidaRF2_expected_prev[19];
	end
	if (
		( SalidaRF2_expected_prev[20] !== 1'bx ) && ( SalidaRF2_prev[20] !== SalidaRF2_expected_prev[20] )
		&& ((SalidaRF2_expected_prev[20] !== last_SalidaRF2_exp[20]) ||
			on_first_change[5])
	)
	begin
		$display ("ERROR! Vector Mismatch for output port SalidaRF2[20] :: @time = %t",  $realtime);
		$display ("     Expected value = %b", SalidaRF2_expected_prev);
		$display ("     Real value = %b", SalidaRF2_prev);
		nummismatches = nummismatches + 1;
		on_first_change[5] = 1'b0;
		last_SalidaRF2_exp[20] = SalidaRF2_expected_prev[20];
	end
	if (
		( SalidaRF2_expected_prev[21] !== 1'bx ) && ( SalidaRF2_prev[21] !== SalidaRF2_expected_prev[21] )
		&& ((SalidaRF2_expected_prev[21] !== last_SalidaRF2_exp[21]) ||
			on_first_change[5])
	)
	begin
		$display ("ERROR! Vector Mismatch for output port SalidaRF2[21] :: @time = %t",  $realtime);
		$display ("     Expected value = %b", SalidaRF2_expected_prev);
		$display ("     Real value = %b", SalidaRF2_prev);
		nummismatches = nummismatches + 1;
		on_first_change[5] = 1'b0;
		last_SalidaRF2_exp[21] = SalidaRF2_expected_prev[21];
	end
	if (
		( SalidaRF2_expected_prev[22] !== 1'bx ) && ( SalidaRF2_prev[22] !== SalidaRF2_expected_prev[22] )
		&& ((SalidaRF2_expected_prev[22] !== last_SalidaRF2_exp[22]) ||
			on_first_change[5])
	)
	begin
		$display ("ERROR! Vector Mismatch for output port SalidaRF2[22] :: @time = %t",  $realtime);
		$display ("     Expected value = %b", SalidaRF2_expected_prev);
		$display ("     Real value = %b", SalidaRF2_prev);
		nummismatches = nummismatches + 1;
		on_first_change[5] = 1'b0;
		last_SalidaRF2_exp[22] = SalidaRF2_expected_prev[22];
	end
	if (
		( SalidaRF2_expected_prev[23] !== 1'bx ) && ( SalidaRF2_prev[23] !== SalidaRF2_expected_prev[23] )
		&& ((SalidaRF2_expected_prev[23] !== last_SalidaRF2_exp[23]) ||
			on_first_change[5])
	)
	begin
		$display ("ERROR! Vector Mismatch for output port SalidaRF2[23] :: @time = %t",  $realtime);
		$display ("     Expected value = %b", SalidaRF2_expected_prev);
		$display ("     Real value = %b", SalidaRF2_prev);
		nummismatches = nummismatches + 1;
		on_first_change[5] = 1'b0;
		last_SalidaRF2_exp[23] = SalidaRF2_expected_prev[23];
	end
	if (
		( SalidaRF2_expected_prev[24] !== 1'bx ) && ( SalidaRF2_prev[24] !== SalidaRF2_expected_prev[24] )
		&& ((SalidaRF2_expected_prev[24] !== last_SalidaRF2_exp[24]) ||
			on_first_change[5])
	)
	begin
		$display ("ERROR! Vector Mismatch for output port SalidaRF2[24] :: @time = %t",  $realtime);
		$display ("     Expected value = %b", SalidaRF2_expected_prev);
		$display ("     Real value = %b", SalidaRF2_prev);
		nummismatches = nummismatches + 1;
		on_first_change[5] = 1'b0;
		last_SalidaRF2_exp[24] = SalidaRF2_expected_prev[24];
	end
	if (
		( SalidaRF2_expected_prev[25] !== 1'bx ) && ( SalidaRF2_prev[25] !== SalidaRF2_expected_prev[25] )
		&& ((SalidaRF2_expected_prev[25] !== last_SalidaRF2_exp[25]) ||
			on_first_change[5])
	)
	begin
		$display ("ERROR! Vector Mismatch for output port SalidaRF2[25] :: @time = %t",  $realtime);
		$display ("     Expected value = %b", SalidaRF2_expected_prev);
		$display ("     Real value = %b", SalidaRF2_prev);
		nummismatches = nummismatches + 1;
		on_first_change[5] = 1'b0;
		last_SalidaRF2_exp[25] = SalidaRF2_expected_prev[25];
	end
	if (
		( SalidaRF2_expected_prev[26] !== 1'bx ) && ( SalidaRF2_prev[26] !== SalidaRF2_expected_prev[26] )
		&& ((SalidaRF2_expected_prev[26] !== last_SalidaRF2_exp[26]) ||
			on_first_change[5])
	)
	begin
		$display ("ERROR! Vector Mismatch for output port SalidaRF2[26] :: @time = %t",  $realtime);
		$display ("     Expected value = %b", SalidaRF2_expected_prev);
		$display ("     Real value = %b", SalidaRF2_prev);
		nummismatches = nummismatches + 1;
		on_first_change[5] = 1'b0;
		last_SalidaRF2_exp[26] = SalidaRF2_expected_prev[26];
	end
	if (
		( SalidaRF2_expected_prev[27] !== 1'bx ) && ( SalidaRF2_prev[27] !== SalidaRF2_expected_prev[27] )
		&& ((SalidaRF2_expected_prev[27] !== last_SalidaRF2_exp[27]) ||
			on_first_change[5])
	)
	begin
		$display ("ERROR! Vector Mismatch for output port SalidaRF2[27] :: @time = %t",  $realtime);
		$display ("     Expected value = %b", SalidaRF2_expected_prev);
		$display ("     Real value = %b", SalidaRF2_prev);
		nummismatches = nummismatches + 1;
		on_first_change[5] = 1'b0;
		last_SalidaRF2_exp[27] = SalidaRF2_expected_prev[27];
	end
	if (
		( SalidaRF2_expected_prev[28] !== 1'bx ) && ( SalidaRF2_prev[28] !== SalidaRF2_expected_prev[28] )
		&& ((SalidaRF2_expected_prev[28] !== last_SalidaRF2_exp[28]) ||
			on_first_change[5])
	)
	begin
		$display ("ERROR! Vector Mismatch for output port SalidaRF2[28] :: @time = %t",  $realtime);
		$display ("     Expected value = %b", SalidaRF2_expected_prev);
		$display ("     Real value = %b", SalidaRF2_prev);
		nummismatches = nummismatches + 1;
		on_first_change[5] = 1'b0;
		last_SalidaRF2_exp[28] = SalidaRF2_expected_prev[28];
	end
	if (
		( SalidaRF2_expected_prev[29] !== 1'bx ) && ( SalidaRF2_prev[29] !== SalidaRF2_expected_prev[29] )
		&& ((SalidaRF2_expected_prev[29] !== last_SalidaRF2_exp[29]) ||
			on_first_change[5])
	)
	begin
		$display ("ERROR! Vector Mismatch for output port SalidaRF2[29] :: @time = %t",  $realtime);
		$display ("     Expected value = %b", SalidaRF2_expected_prev);
		$display ("     Real value = %b", SalidaRF2_prev);
		nummismatches = nummismatches + 1;
		on_first_change[5] = 1'b0;
		last_SalidaRF2_exp[29] = SalidaRF2_expected_prev[29];
	end
	if (
		( SalidaRF2_expected_prev[30] !== 1'bx ) && ( SalidaRF2_prev[30] !== SalidaRF2_expected_prev[30] )
		&& ((SalidaRF2_expected_prev[30] !== last_SalidaRF2_exp[30]) ||
			on_first_change[5])
	)
	begin
		$display ("ERROR! Vector Mismatch for output port SalidaRF2[30] :: @time = %t",  $realtime);
		$display ("     Expected value = %b", SalidaRF2_expected_prev);
		$display ("     Real value = %b", SalidaRF2_prev);
		nummismatches = nummismatches + 1;
		on_first_change[5] = 1'b0;
		last_SalidaRF2_exp[30] = SalidaRF2_expected_prev[30];
	end
	if (
		( SalidaRF2_expected_prev[31] !== 1'bx ) && ( SalidaRF2_prev[31] !== SalidaRF2_expected_prev[31] )
		&& ((SalidaRF2_expected_prev[31] !== last_SalidaRF2_exp[31]) ||
			on_first_change[5])
	)
	begin
		$display ("ERROR! Vector Mismatch for output port SalidaRF2[31] :: @time = %t",  $realtime);
		$display ("     Expected value = %b", SalidaRF2_expected_prev);
		$display ("     Real value = %b", SalidaRF2_prev);
		nummismatches = nummismatches + 1;
		on_first_change[5] = 1'b0;
		last_SalidaRF2_exp[31] = SalidaRF2_expected_prev[31];
	end
	if (
		( SalidaROM_expected_prev[0] !== 1'bx ) && ( SalidaROM_prev[0] !== SalidaROM_expected_prev[0] )
		&& ((SalidaROM_expected_prev[0] !== last_SalidaROM_exp[0]) ||
			on_first_change[6])
	)
	begin
		$display ("ERROR! Vector Mismatch for output port SalidaROM[0] :: @time = %t",  $realtime);
		$display ("     Expected value = %b", SalidaROM_expected_prev);
		$display ("     Real value = %b", SalidaROM_prev);
		nummismatches = nummismatches + 1;
		on_first_change[6] = 1'b0;
		last_SalidaROM_exp[0] = SalidaROM_expected_prev[0];
	end
	if (
		( SalidaROM_expected_prev[1] !== 1'bx ) && ( SalidaROM_prev[1] !== SalidaROM_expected_prev[1] )
		&& ((SalidaROM_expected_prev[1] !== last_SalidaROM_exp[1]) ||
			on_first_change[6])
	)
	begin
		$display ("ERROR! Vector Mismatch for output port SalidaROM[1] :: @time = %t",  $realtime);
		$display ("     Expected value = %b", SalidaROM_expected_prev);
		$display ("     Real value = %b", SalidaROM_prev);
		nummismatches = nummismatches + 1;
		on_first_change[6] = 1'b0;
		last_SalidaROM_exp[1] = SalidaROM_expected_prev[1];
	end
	if (
		( SalidaROM_expected_prev[2] !== 1'bx ) && ( SalidaROM_prev[2] !== SalidaROM_expected_prev[2] )
		&& ((SalidaROM_expected_prev[2] !== last_SalidaROM_exp[2]) ||
			on_first_change[6])
	)
	begin
		$display ("ERROR! Vector Mismatch for output port SalidaROM[2] :: @time = %t",  $realtime);
		$display ("     Expected value = %b", SalidaROM_expected_prev);
		$display ("     Real value = %b", SalidaROM_prev);
		nummismatches = nummismatches + 1;
		on_first_change[6] = 1'b0;
		last_SalidaROM_exp[2] = SalidaROM_expected_prev[2];
	end
	if (
		( SalidaROM_expected_prev[3] !== 1'bx ) && ( SalidaROM_prev[3] !== SalidaROM_expected_prev[3] )
		&& ((SalidaROM_expected_prev[3] !== last_SalidaROM_exp[3]) ||
			on_first_change[6])
	)
	begin
		$display ("ERROR! Vector Mismatch for output port SalidaROM[3] :: @time = %t",  $realtime);
		$display ("     Expected value = %b", SalidaROM_expected_prev);
		$display ("     Real value = %b", SalidaROM_prev);
		nummismatches = nummismatches + 1;
		on_first_change[6] = 1'b0;
		last_SalidaROM_exp[3] = SalidaROM_expected_prev[3];
	end
	if (
		( SalidaROM_expected_prev[4] !== 1'bx ) && ( SalidaROM_prev[4] !== SalidaROM_expected_prev[4] )
		&& ((SalidaROM_expected_prev[4] !== last_SalidaROM_exp[4]) ||
			on_first_change[6])
	)
	begin
		$display ("ERROR! Vector Mismatch for output port SalidaROM[4] :: @time = %t",  $realtime);
		$display ("     Expected value = %b", SalidaROM_expected_prev);
		$display ("     Real value = %b", SalidaROM_prev);
		nummismatches = nummismatches + 1;
		on_first_change[6] = 1'b0;
		last_SalidaROM_exp[4] = SalidaROM_expected_prev[4];
	end
	if (
		( SalidaROM_expected_prev[5] !== 1'bx ) && ( SalidaROM_prev[5] !== SalidaROM_expected_prev[5] )
		&& ((SalidaROM_expected_prev[5] !== last_SalidaROM_exp[5]) ||
			on_first_change[6])
	)
	begin
		$display ("ERROR! Vector Mismatch for output port SalidaROM[5] :: @time = %t",  $realtime);
		$display ("     Expected value = %b", SalidaROM_expected_prev);
		$display ("     Real value = %b", SalidaROM_prev);
		nummismatches = nummismatches + 1;
		on_first_change[6] = 1'b0;
		last_SalidaROM_exp[5] = SalidaROM_expected_prev[5];
	end
	if (
		( SalidaROM_expected_prev[6] !== 1'bx ) && ( SalidaROM_prev[6] !== SalidaROM_expected_prev[6] )
		&& ((SalidaROM_expected_prev[6] !== last_SalidaROM_exp[6]) ||
			on_first_change[6])
	)
	begin
		$display ("ERROR! Vector Mismatch for output port SalidaROM[6] :: @time = %t",  $realtime);
		$display ("     Expected value = %b", SalidaROM_expected_prev);
		$display ("     Real value = %b", SalidaROM_prev);
		nummismatches = nummismatches + 1;
		on_first_change[6] = 1'b0;
		last_SalidaROM_exp[6] = SalidaROM_expected_prev[6];
	end
	if (
		( SalidaROM_expected_prev[7] !== 1'bx ) && ( SalidaROM_prev[7] !== SalidaROM_expected_prev[7] )
		&& ((SalidaROM_expected_prev[7] !== last_SalidaROM_exp[7]) ||
			on_first_change[6])
	)
	begin
		$display ("ERROR! Vector Mismatch for output port SalidaROM[7] :: @time = %t",  $realtime);
		$display ("     Expected value = %b", SalidaROM_expected_prev);
		$display ("     Real value = %b", SalidaROM_prev);
		nummismatches = nummismatches + 1;
		on_first_change[6] = 1'b0;
		last_SalidaROM_exp[7] = SalidaROM_expected_prev[7];
	end
	if (
		( SalidaROM_expected_prev[8] !== 1'bx ) && ( SalidaROM_prev[8] !== SalidaROM_expected_prev[8] )
		&& ((SalidaROM_expected_prev[8] !== last_SalidaROM_exp[8]) ||
			on_first_change[6])
	)
	begin
		$display ("ERROR! Vector Mismatch for output port SalidaROM[8] :: @time = %t",  $realtime);
		$display ("     Expected value = %b", SalidaROM_expected_prev);
		$display ("     Real value = %b", SalidaROM_prev);
		nummismatches = nummismatches + 1;
		on_first_change[6] = 1'b0;
		last_SalidaROM_exp[8] = SalidaROM_expected_prev[8];
	end
	if (
		( SalidaROM_expected_prev[9] !== 1'bx ) && ( SalidaROM_prev[9] !== SalidaROM_expected_prev[9] )
		&& ((SalidaROM_expected_prev[9] !== last_SalidaROM_exp[9]) ||
			on_first_change[6])
	)
	begin
		$display ("ERROR! Vector Mismatch for output port SalidaROM[9] :: @time = %t",  $realtime);
		$display ("     Expected value = %b", SalidaROM_expected_prev);
		$display ("     Real value = %b", SalidaROM_prev);
		nummismatches = nummismatches + 1;
		on_first_change[6] = 1'b0;
		last_SalidaROM_exp[9] = SalidaROM_expected_prev[9];
	end
	if (
		( SalidaROM_expected_prev[10] !== 1'bx ) && ( SalidaROM_prev[10] !== SalidaROM_expected_prev[10] )
		&& ((SalidaROM_expected_prev[10] !== last_SalidaROM_exp[10]) ||
			on_first_change[6])
	)
	begin
		$display ("ERROR! Vector Mismatch for output port SalidaROM[10] :: @time = %t",  $realtime);
		$display ("     Expected value = %b", SalidaROM_expected_prev);
		$display ("     Real value = %b", SalidaROM_prev);
		nummismatches = nummismatches + 1;
		on_first_change[6] = 1'b0;
		last_SalidaROM_exp[10] = SalidaROM_expected_prev[10];
	end
	if (
		( SalidaROM_expected_prev[11] !== 1'bx ) && ( SalidaROM_prev[11] !== SalidaROM_expected_prev[11] )
		&& ((SalidaROM_expected_prev[11] !== last_SalidaROM_exp[11]) ||
			on_first_change[6])
	)
	begin
		$display ("ERROR! Vector Mismatch for output port SalidaROM[11] :: @time = %t",  $realtime);
		$display ("     Expected value = %b", SalidaROM_expected_prev);
		$display ("     Real value = %b", SalidaROM_prev);
		nummismatches = nummismatches + 1;
		on_first_change[6] = 1'b0;
		last_SalidaROM_exp[11] = SalidaROM_expected_prev[11];
	end
	if (
		( SalidaROM_expected_prev[12] !== 1'bx ) && ( SalidaROM_prev[12] !== SalidaROM_expected_prev[12] )
		&& ((SalidaROM_expected_prev[12] !== last_SalidaROM_exp[12]) ||
			on_first_change[6])
	)
	begin
		$display ("ERROR! Vector Mismatch for output port SalidaROM[12] :: @time = %t",  $realtime);
		$display ("     Expected value = %b", SalidaROM_expected_prev);
		$display ("     Real value = %b", SalidaROM_prev);
		nummismatches = nummismatches + 1;
		on_first_change[6] = 1'b0;
		last_SalidaROM_exp[12] = SalidaROM_expected_prev[12];
	end
	if (
		( SalidaROM_expected_prev[13] !== 1'bx ) && ( SalidaROM_prev[13] !== SalidaROM_expected_prev[13] )
		&& ((SalidaROM_expected_prev[13] !== last_SalidaROM_exp[13]) ||
			on_first_change[6])
	)
	begin
		$display ("ERROR! Vector Mismatch for output port SalidaROM[13] :: @time = %t",  $realtime);
		$display ("     Expected value = %b", SalidaROM_expected_prev);
		$display ("     Real value = %b", SalidaROM_prev);
		nummismatches = nummismatches + 1;
		on_first_change[6] = 1'b0;
		last_SalidaROM_exp[13] = SalidaROM_expected_prev[13];
	end
	if (
		( SalidaROM_expected_prev[14] !== 1'bx ) && ( SalidaROM_prev[14] !== SalidaROM_expected_prev[14] )
		&& ((SalidaROM_expected_prev[14] !== last_SalidaROM_exp[14]) ||
			on_first_change[6])
	)
	begin
		$display ("ERROR! Vector Mismatch for output port SalidaROM[14] :: @time = %t",  $realtime);
		$display ("     Expected value = %b", SalidaROM_expected_prev);
		$display ("     Real value = %b", SalidaROM_prev);
		nummismatches = nummismatches + 1;
		on_first_change[6] = 1'b0;
		last_SalidaROM_exp[14] = SalidaROM_expected_prev[14];
	end
	if (
		( SalidaROM_expected_prev[15] !== 1'bx ) && ( SalidaROM_prev[15] !== SalidaROM_expected_prev[15] )
		&& ((SalidaROM_expected_prev[15] !== last_SalidaROM_exp[15]) ||
			on_first_change[6])
	)
	begin
		$display ("ERROR! Vector Mismatch for output port SalidaROM[15] :: @time = %t",  $realtime);
		$display ("     Expected value = %b", SalidaROM_expected_prev);
		$display ("     Real value = %b", SalidaROM_prev);
		nummismatches = nummismatches + 1;
		on_first_change[6] = 1'b0;
		last_SalidaROM_exp[15] = SalidaROM_expected_prev[15];
	end
	if (
		( SalidaROM_expected_prev[16] !== 1'bx ) && ( SalidaROM_prev[16] !== SalidaROM_expected_prev[16] )
		&& ((SalidaROM_expected_prev[16] !== last_SalidaROM_exp[16]) ||
			on_first_change[6])
	)
	begin
		$display ("ERROR! Vector Mismatch for output port SalidaROM[16] :: @time = %t",  $realtime);
		$display ("     Expected value = %b", SalidaROM_expected_prev);
		$display ("     Real value = %b", SalidaROM_prev);
		nummismatches = nummismatches + 1;
		on_first_change[6] = 1'b0;
		last_SalidaROM_exp[16] = SalidaROM_expected_prev[16];
	end
	if (
		( SalidaROM_expected_prev[17] !== 1'bx ) && ( SalidaROM_prev[17] !== SalidaROM_expected_prev[17] )
		&& ((SalidaROM_expected_prev[17] !== last_SalidaROM_exp[17]) ||
			on_first_change[6])
	)
	begin
		$display ("ERROR! Vector Mismatch for output port SalidaROM[17] :: @time = %t",  $realtime);
		$display ("     Expected value = %b", SalidaROM_expected_prev);
		$display ("     Real value = %b", SalidaROM_prev);
		nummismatches = nummismatches + 1;
		on_first_change[6] = 1'b0;
		last_SalidaROM_exp[17] = SalidaROM_expected_prev[17];
	end
	if (
		( SalidaROM_expected_prev[18] !== 1'bx ) && ( SalidaROM_prev[18] !== SalidaROM_expected_prev[18] )
		&& ((SalidaROM_expected_prev[18] !== last_SalidaROM_exp[18]) ||
			on_first_change[6])
	)
	begin
		$display ("ERROR! Vector Mismatch for output port SalidaROM[18] :: @time = %t",  $realtime);
		$display ("     Expected value = %b", SalidaROM_expected_prev);
		$display ("     Real value = %b", SalidaROM_prev);
		nummismatches = nummismatches + 1;
		on_first_change[6] = 1'b0;
		last_SalidaROM_exp[18] = SalidaROM_expected_prev[18];
	end
	if (
		( SalidaROM_expected_prev[19] !== 1'bx ) && ( SalidaROM_prev[19] !== SalidaROM_expected_prev[19] )
		&& ((SalidaROM_expected_prev[19] !== last_SalidaROM_exp[19]) ||
			on_first_change[6])
	)
	begin
		$display ("ERROR! Vector Mismatch for output port SalidaROM[19] :: @time = %t",  $realtime);
		$display ("     Expected value = %b", SalidaROM_expected_prev);
		$display ("     Real value = %b", SalidaROM_prev);
		nummismatches = nummismatches + 1;
		on_first_change[6] = 1'b0;
		last_SalidaROM_exp[19] = SalidaROM_expected_prev[19];
	end
	if (
		( SalidaROM_expected_prev[20] !== 1'bx ) && ( SalidaROM_prev[20] !== SalidaROM_expected_prev[20] )
		&& ((SalidaROM_expected_prev[20] !== last_SalidaROM_exp[20]) ||
			on_first_change[6])
	)
	begin
		$display ("ERROR! Vector Mismatch for output port SalidaROM[20] :: @time = %t",  $realtime);
		$display ("     Expected value = %b", SalidaROM_expected_prev);
		$display ("     Real value = %b", SalidaROM_prev);
		nummismatches = nummismatches + 1;
		on_first_change[6] = 1'b0;
		last_SalidaROM_exp[20] = SalidaROM_expected_prev[20];
	end
	if (
		( SalidaROM_expected_prev[21] !== 1'bx ) && ( SalidaROM_prev[21] !== SalidaROM_expected_prev[21] )
		&& ((SalidaROM_expected_prev[21] !== last_SalidaROM_exp[21]) ||
			on_first_change[6])
	)
	begin
		$display ("ERROR! Vector Mismatch for output port SalidaROM[21] :: @time = %t",  $realtime);
		$display ("     Expected value = %b", SalidaROM_expected_prev);
		$display ("     Real value = %b", SalidaROM_prev);
		nummismatches = nummismatches + 1;
		on_first_change[6] = 1'b0;
		last_SalidaROM_exp[21] = SalidaROM_expected_prev[21];
	end
	if (
		( SalidaROM_expected_prev[22] !== 1'bx ) && ( SalidaROM_prev[22] !== SalidaROM_expected_prev[22] )
		&& ((SalidaROM_expected_prev[22] !== last_SalidaROM_exp[22]) ||
			on_first_change[6])
	)
	begin
		$display ("ERROR! Vector Mismatch for output port SalidaROM[22] :: @time = %t",  $realtime);
		$display ("     Expected value = %b", SalidaROM_expected_prev);
		$display ("     Real value = %b", SalidaROM_prev);
		nummismatches = nummismatches + 1;
		on_first_change[6] = 1'b0;
		last_SalidaROM_exp[22] = SalidaROM_expected_prev[22];
	end
	if (
		( SalidaROM_expected_prev[23] !== 1'bx ) && ( SalidaROM_prev[23] !== SalidaROM_expected_prev[23] )
		&& ((SalidaROM_expected_prev[23] !== last_SalidaROM_exp[23]) ||
			on_first_change[6])
	)
	begin
		$display ("ERROR! Vector Mismatch for output port SalidaROM[23] :: @time = %t",  $realtime);
		$display ("     Expected value = %b", SalidaROM_expected_prev);
		$display ("     Real value = %b", SalidaROM_prev);
		nummismatches = nummismatches + 1;
		on_first_change[6] = 1'b0;
		last_SalidaROM_exp[23] = SalidaROM_expected_prev[23];
	end
	if (
		( SalidaROM_expected_prev[24] !== 1'bx ) && ( SalidaROM_prev[24] !== SalidaROM_expected_prev[24] )
		&& ((SalidaROM_expected_prev[24] !== last_SalidaROM_exp[24]) ||
			on_first_change[6])
	)
	begin
		$display ("ERROR! Vector Mismatch for output port SalidaROM[24] :: @time = %t",  $realtime);
		$display ("     Expected value = %b", SalidaROM_expected_prev);
		$display ("     Real value = %b", SalidaROM_prev);
		nummismatches = nummismatches + 1;
		on_first_change[6] = 1'b0;
		last_SalidaROM_exp[24] = SalidaROM_expected_prev[24];
	end
	if (
		( SalidaROM_expected_prev[25] !== 1'bx ) && ( SalidaROM_prev[25] !== SalidaROM_expected_prev[25] )
		&& ((SalidaROM_expected_prev[25] !== last_SalidaROM_exp[25]) ||
			on_first_change[6])
	)
	begin
		$display ("ERROR! Vector Mismatch for output port SalidaROM[25] :: @time = %t",  $realtime);
		$display ("     Expected value = %b", SalidaROM_expected_prev);
		$display ("     Real value = %b", SalidaROM_prev);
		nummismatches = nummismatches + 1;
		on_first_change[6] = 1'b0;
		last_SalidaROM_exp[25] = SalidaROM_expected_prev[25];
	end
	if (
		( SalidaROM_expected_prev[26] !== 1'bx ) && ( SalidaROM_prev[26] !== SalidaROM_expected_prev[26] )
		&& ((SalidaROM_expected_prev[26] !== last_SalidaROM_exp[26]) ||
			on_first_change[6])
	)
	begin
		$display ("ERROR! Vector Mismatch for output port SalidaROM[26] :: @time = %t",  $realtime);
		$display ("     Expected value = %b", SalidaROM_expected_prev);
		$display ("     Real value = %b", SalidaROM_prev);
		nummismatches = nummismatches + 1;
		on_first_change[6] = 1'b0;
		last_SalidaROM_exp[26] = SalidaROM_expected_prev[26];
	end
	if (
		( SalidaROM_expected_prev[27] !== 1'bx ) && ( SalidaROM_prev[27] !== SalidaROM_expected_prev[27] )
		&& ((SalidaROM_expected_prev[27] !== last_SalidaROM_exp[27]) ||
			on_first_change[6])
	)
	begin
		$display ("ERROR! Vector Mismatch for output port SalidaROM[27] :: @time = %t",  $realtime);
		$display ("     Expected value = %b", SalidaROM_expected_prev);
		$display ("     Real value = %b", SalidaROM_prev);
		nummismatches = nummismatches + 1;
		on_first_change[6] = 1'b0;
		last_SalidaROM_exp[27] = SalidaROM_expected_prev[27];
	end
	if (
		( SalidaROM_expected_prev[28] !== 1'bx ) && ( SalidaROM_prev[28] !== SalidaROM_expected_prev[28] )
		&& ((SalidaROM_expected_prev[28] !== last_SalidaROM_exp[28]) ||
			on_first_change[6])
	)
	begin
		$display ("ERROR! Vector Mismatch for output port SalidaROM[28] :: @time = %t",  $realtime);
		$display ("     Expected value = %b", SalidaROM_expected_prev);
		$display ("     Real value = %b", SalidaROM_prev);
		nummismatches = nummismatches + 1;
		on_first_change[6] = 1'b0;
		last_SalidaROM_exp[28] = SalidaROM_expected_prev[28];
	end
	if (
		( SalidaROM_expected_prev[29] !== 1'bx ) && ( SalidaROM_prev[29] !== SalidaROM_expected_prev[29] )
		&& ((SalidaROM_expected_prev[29] !== last_SalidaROM_exp[29]) ||
			on_first_change[6])
	)
	begin
		$display ("ERROR! Vector Mismatch for output port SalidaROM[29] :: @time = %t",  $realtime);
		$display ("     Expected value = %b", SalidaROM_expected_prev);
		$display ("     Real value = %b", SalidaROM_prev);
		nummismatches = nummismatches + 1;
		on_first_change[6] = 1'b0;
		last_SalidaROM_exp[29] = SalidaROM_expected_prev[29];
	end
	if (
		( SalidaROM_expected_prev[30] !== 1'bx ) && ( SalidaROM_prev[30] !== SalidaROM_expected_prev[30] )
		&& ((SalidaROM_expected_prev[30] !== last_SalidaROM_exp[30]) ||
			on_first_change[6])
	)
	begin
		$display ("ERROR! Vector Mismatch for output port SalidaROM[30] :: @time = %t",  $realtime);
		$display ("     Expected value = %b", SalidaROM_expected_prev);
		$display ("     Real value = %b", SalidaROM_prev);
		nummismatches = nummismatches + 1;
		on_first_change[6] = 1'b0;
		last_SalidaROM_exp[30] = SalidaROM_expected_prev[30];
	end
	if (
		( SalidaROM_expected_prev[31] !== 1'bx ) && ( SalidaROM_prev[31] !== SalidaROM_expected_prev[31] )
		&& ((SalidaROM_expected_prev[31] !== last_SalidaROM_exp[31]) ||
			on_first_change[6])
	)
	begin
		$display ("ERROR! Vector Mismatch for output port SalidaROM[31] :: @time = %t",  $realtime);
		$display ("     Expected value = %b", SalidaROM_expected_prev);
		$display ("     Real value = %b", SalidaROM_prev);
		nummismatches = nummismatches + 1;
		on_first_change[6] = 1'b0;
		last_SalidaROM_exp[31] = SalidaROM_expected_prev[31];
	end

	trigger <= ~trigger;
end
initial 

begin 
$timeformat(-12,3," ps",6);
#1000000;
if (nummismatches > 0)
	$display ("%d mismatched vectors : Simulation failed !",nummismatches);
else
	$display ("Simulation passed !");
$finish;
end 
endmodule

module monociclo_vlg_vec_tst();
// constants                                           
// general purpose registers
reg clk;
// wires                                               
wire [31:0] SalidaALU;
wire [7:0] SalidaPC;
wire [31:0] SalidaRAM;
wire [31:0] SalidaRF1;
wire [31:0] SalidaRF2;
wire [31:0] SalidaROM;

wire sampler;                             

// assign statements (if any)                          
monociclo i1 (
// port map - connection between master ports and signals/registers   
	.clk(clk),
	.SalidaALU(SalidaALU),
	.SalidaPC(SalidaPC),
	.SalidaRAM(SalidaRAM),
	.SalidaRF1(SalidaRF1),
	.SalidaRF2(SalidaRF2),
	.SalidaROM(SalidaROM)
);

// clk
initial
begin
	clk = 1'b1;
	# 25000;
	repeat(19)
	begin
		clk = 1'b0;
		clk = #25000 1'b1;
		# 25000;
	end
	clk = 1'b0;
end 

monociclo_vlg_sample_tst tb_sample (
	.clk(clk),
	.sampler_tx(sampler)
);

monociclo_vlg_check_tst tb_out(
	.SalidaALU(SalidaALU),
	.SalidaPC(SalidaPC),
	.SalidaRAM(SalidaRAM),
	.SalidaRF1(SalidaRF1),
	.SalidaRF2(SalidaRF2),
	.SalidaROM(SalidaROM),
	.sampler_rx(sampler)
);
endmodule

